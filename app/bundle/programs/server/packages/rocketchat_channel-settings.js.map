{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveReactWhenReadOnly.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomType.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomTopic.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomAnnouncement.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomName.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomReadOnly.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomDescription.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomSystemMessages.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/methods/saveRoomSettings.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/models/Messages.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/models/Rooms.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/startup.js"],"names":["RocketChat","saveReactWhenReadOnly","rid","allowReact","Match","test","String","Meteor","Error","function","models","Rooms","setAllowReactingWhenReadOnlyById","saveRoomType","roomType","user","sendMessage","type","room","findOneById","_id","t","result","setTypeById","Subscriptions","updateTypeByRoomId","message","TAPi18n","__","lng","language","settings","get","Messages","createRoomSettingsChangedWithTypeRoomIdMessageAndUser","s","module","watch","require","default","v","saveRoomTopic","roomTopic","escapeHTML","update","setTopicById","saveRoomAnnouncement","roomAnnouncement","updated","setAnnouncementById","saveRoomName","displayName","roomTypes","preventRenaming","name","slugifiedRoomName","getValidRoomName","setNameById","updateNameAndAlertByRoomId","createRoomRenamedWithRoomIdRoomNameAndUser","saveRoomReadOnly","readOnly","setReadOnlyById","saveRoomDescription","roomDescription","escapedRoomDescription","setDescriptionById","saveRoomSystemMessages","systemMessages","setSystemMessagesById","methods","saveRoomSettings","setting","value","userId","method","some","authz","hasPermission","action","topic","announcement","description","check","tokens","token","balance","saveRoomTokenpass","ro","reactWhenReadOnly","sysMes","setJoinCodeById","saveDefaultById","roomId","extraData","createWithTypeRoomIdMessageAndUser","roomName","query","$set","findByRoomId","forEach","subscription","_user","muted","push","username","$unset","allowReacting","startup","Permissions","upsert","$setOnInsert","roles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,WAAWC,qBAAX,GAAmC,UAASC,GAAT,EAAcC,UAAd,EAA0B;AAC5D,KAAI,CAACC,MAAMC,IAAN,CAAWH,GAAX,EAAgBI,MAAhB,CAAL,EAA8B;AAC7B,QAAM,IAAIC,OAAOC,KAAX,CAAiB,cAAjB,EAAiC,cAAjC,EAAiD;AAAEC,aAAU;AAAZ,GAAjD,CAAN;AACA;;AAED,QAAOT,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBC,gCAAxB,CAAyDV,GAAzD,EAA8DC,UAA9D,CAAP;AACA,CAND,C;;;;;;;;;;;ACCAH,WAAWa,YAAX,GAA0B,UAASX,GAAT,EAAcY,QAAd,EAAwBC,IAAxB,EAA8BC,cAAc,IAA5C,EAAkD;AAC3E,KAAI,CAACZ,MAAMC,IAAN,CAAWH,GAAX,EAAgBI,MAAhB,CAAL,EAA8B;AAC7B,QAAM,IAAIC,OAAOC,KAAX,CAAiB,cAAjB,EAAiC,cAAjC,EAAiD;AACtD,eAAY;AAD0C,GAAjD,CAAN;AAGA;;AACD,KAAIM,aAAa,GAAb,IAAoBA,aAAa,GAArC,EAA0C;AACzC,QAAM,IAAIP,OAAOC,KAAX,CAAiB,yBAAjB,EAA4C,yBAA5C,EAAuE;AAC5E,eAAY,yBADgE;AAE5ES,SAAMH;AAFsE,GAAvE,CAAN;AAIA;;AACD,OAAMI,OAAOlB,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBQ,WAAxB,CAAoCjB,GAApC,CAAb;;AACA,KAAIgB,QAAQ,IAAZ,EAAkB;AACjB,QAAM,IAAIX,OAAOC,KAAX,CAAiB,oBAAjB,EAAuC,oBAAvC,EAA6D;AAClE,eAAY,yBADsD;AAElEY,QAAKlB;AAF6D,GAA7D,CAAN;AAIA;;AACD,KAAIgB,KAAKG,CAAL,KAAW,GAAf,EAAoB;AACnB,QAAM,IAAId,OAAOC,KAAX,CAAiB,mBAAjB,EAAsC,oCAAtC,EAA4E;AACjF,eAAY;AADqE,GAA5E,CAAN;AAGA;;AACD,OAAMc,SAAStB,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBY,WAAxB,CAAoCrB,GAApC,EAAyCY,QAAzC,KAAsDd,WAAWU,MAAX,CAAkBc,aAAlB,CAAgCC,kBAAhC,CAAmDvB,GAAnD,EAAwDY,QAAxD,CAArE;;AACA,KAAIQ,UAAUN,WAAd,EAA2B;AAC1B,MAAIU,OAAJ;;AACA,MAAIZ,aAAa,GAAjB,EAAsB;AACrBY,aAAUC,QAAQC,EAAR,CAAW,SAAX,EAAsB;AAC/BC,SAAKd,QAAQA,KAAKe,QAAb,IAAyB9B,WAAW+B,QAAX,CAAoBC,GAApB,CAAwB,UAAxB,CAAzB,IAAgE;AADtC,IAAtB,CAAV;AAGA,GAJD,MAIO;AACNN,aAAUC,QAAQC,EAAR,CAAW,eAAX,EAA4B;AACrCC,SAAKd,QAAQA,KAAKe,QAAb,IAAyB9B,WAAW+B,QAAX,CAAoBC,GAApB,CAAwB,UAAxB,CAAzB,IAAgE;AADhC,IAA5B,CAAV;AAGA;;AACDhC,aAAWU,MAAX,CAAkBuB,QAAlB,CAA2BC,qDAA3B,CAAiF,sBAAjF,EAAyGhC,GAAzG,EAA8GwB,OAA9G,EAAuHX,IAAvH;AACA;;AACD,QAAOO,MAAP;AACA,CAvCD,C;;;;;;;;;;;ACDA,IAAIa,CAAJ;AAAMC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACC,SAAQC,CAAR,EAAU;AAACL,MAAEK,CAAF;AAAI;;AAAhB,CAA1C,EAA4D,CAA5D;;AAENxC,WAAWyC,aAAX,GAA2B,UAASvC,GAAT,EAAcwC,SAAd,EAAyB3B,IAAzB,EAA+BC,cAAc,IAA7C,EAAmD;AAC7E,KAAI,CAACZ,MAAMC,IAAN,CAAWH,GAAX,EAAgBI,MAAhB,CAAL,EAA8B;AAC7B,QAAM,IAAIC,OAAOC,KAAX,CAAiB,cAAjB,EAAiC,cAAjC,EAAiD;AACtD,eAAY;AAD0C,GAAjD,CAAN;AAGA;;AACDkC,aAAYP,EAAEQ,UAAF,CAAaD,SAAb,CAAZ;AACA,OAAME,SAAS5C,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBkC,YAAxB,CAAqC3C,GAArC,EAA0CwC,SAA1C,CAAf;;AACA,KAAIE,UAAU5B,WAAd,EAA2B;AAC1BhB,aAAWU,MAAX,CAAkBuB,QAAlB,CAA2BC,qDAA3B,CAAiF,oBAAjF,EAAuGhC,GAAvG,EAA4GwC,SAA5G,EAAuH3B,IAAvH;AACA;;AACD,QAAO6B,MAAP;AACA,CAZD,C;;;;;;;;;;;ACFA,IAAIT,CAAJ;AAAMC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACC,SAAQC,CAAR,EAAU;AAACL,MAAEK,CAAF;AAAI;;AAAhB,CAA1C,EAA4D,CAA5D;;AAENxC,WAAW8C,oBAAX,GAAkC,UAAS5C,GAAT,EAAc6C,gBAAd,EAAgChC,IAAhC,EAAsCC,cAAY,IAAlD,EAAwD;AACzF,KAAI,CAACZ,MAAMC,IAAN,CAAWH,GAAX,EAAgBI,MAAhB,CAAL,EAA8B;AAC7B,QAAM,IAAIC,OAAOC,KAAX,CAAiB,cAAjB,EAAiC,cAAjC,EAAiD;AAAEC,aAAU;AAAZ,GAAjD,CAAN;AACA;;AAEDsC,oBAAmBZ,EAAEQ,UAAF,CAAaI,gBAAb,CAAnB;AACA,OAAMC,UAAUhD,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBsC,mBAAxB,CAA4C/C,GAA5C,EAAiD6C,gBAAjD,CAAhB;;AACA,KAAIC,WAAWhC,WAAf,EAA4B;AAC3BhB,aAAWU,MAAX,CAAkBuB,QAAlB,CAA2BC,qDAA3B,CAAiF,2BAAjF,EAA8GhC,GAA9G,EAAmH6C,gBAAnH,EAAqIhC,IAArI;AACA;;AAED,QAAOiC,OAAP;AACA,CAZD,C;;;;;;;;;;;ACDAhD,WAAWkD,YAAX,GAA0B,UAAShD,GAAT,EAAciD,WAAd,EAA2BpC,IAA3B,EAAiCC,cAAc,IAA/C,EAAqD;AAC9E,OAAME,OAAOlB,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBQ,WAAxB,CAAoCjB,GAApC,CAAb;;AACA,KAAIF,WAAWoD,SAAX,CAAqBA,SAArB,CAA+BlC,KAAKG,CAApC,EAAuCgC,eAAvC,EAAJ,EAA8D;AAC7D,QAAM,IAAI9C,OAAOC,KAAX,CAAiB,mBAAjB,EAAsC,aAAtC,EAAqD;AAC1D,eAAY;AAD8C,GAArD,CAAN;AAGA;;AACD,KAAI2C,gBAAgBjC,KAAKoC,IAAzB,EAA+B;AAC9B;AACA;;AAED,OAAMC,oBAAoBvD,WAAWwD,gBAAX,CAA4BL,WAA5B,EAAyCjD,GAAzC,CAA1B;AAEA,OAAM0C,SAAS5C,WAAWU,MAAX,CAAkBC,KAAlB,CAAwB8C,WAAxB,CAAoCvD,GAApC,EAAyCqD,iBAAzC,EAA4DJ,WAA5D,KAA4EnD,WAAWU,MAAX,CAAkBc,aAAlB,CAAgCkC,0BAAhC,CAA2DxD,GAA3D,EAAgEqD,iBAAhE,EAAmFJ,WAAnF,CAA3F;;AAEA,KAAIP,UAAU5B,WAAd,EAA2B;AAC1BhB,aAAWU,MAAX,CAAkBuB,QAAlB,CAA2B0B,0CAA3B,CAAsEzD,GAAtE,EAA2EiD,WAA3E,EAAwFpC,IAAxF;AACA;;AACD,QAAOoC,WAAP;AACA,CAnBD,C;;;;;;;;;;;ACDAnD,WAAW4D,gBAAX,GAA8B,UAAS1D,GAAT,EAAc2D,QAAd,EAAwB;AACrD,KAAI,CAACzD,MAAMC,IAAN,CAAWH,GAAX,EAAgBI,MAAhB,CAAL,EAA8B;AAC7B,QAAM,IAAIC,OAAOC,KAAX,CAAiB,cAAjB,EAAiC,cAAjC,EAAiD;AACtD,eAAY;AAD0C,GAAjD,CAAN;AAGA;;AACD,QAAOR,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBmD,eAAxB,CAAwC5D,GAAxC,EAA6C2D,QAA7C,CAAP;AACA,CAPD,C;;;;;;;;;;;ACAA,IAAI1B,CAAJ;AAAMC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACC,SAAQC,CAAR,EAAU;AAACL,MAAEK,CAAF;AAAI;;AAAhB,CAA1C,EAA4D,CAA5D;;AAENxC,WAAW+D,mBAAX,GAAiC,UAAS7D,GAAT,EAAc8D,eAAd,EAA+BjD,IAA/B,EAAqC;AAErE,KAAI,CAACX,MAAMC,IAAN,CAAWH,GAAX,EAAgBI,MAAhB,CAAL,EAA8B;AAC7B,QAAM,IAAIC,OAAOC,KAAX,CAAiB,cAAjB,EAAiC,cAAjC,EAAiD;AACtD,eAAY;AAD0C,GAAjD,CAAN;AAGA;;AACD,OAAMyD,yBAAyB9B,EAAEQ,UAAF,CAAaqB,eAAb,CAA/B;AACA,OAAMpB,SAAS5C,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBuD,kBAAxB,CAA2ChE,GAA3C,EAAgD+D,sBAAhD,CAAf;AACAjE,YAAWU,MAAX,CAAkBuB,QAAlB,CAA2BC,qDAA3B,CAAiF,0BAAjF,EAA6GhC,GAA7G,EAAkH+D,sBAAlH,EAA0IlD,IAA1I;AACA,QAAO6B,MAAP;AACA,CAXD,C;;;;;;;;;;;ACFA5C,WAAWmE,sBAAX,GAAoC,UAASjE,GAAT,EAAckE,cAAd,EAA8B;AACjE,KAAI,CAAChE,MAAMC,IAAN,CAAWH,GAAX,EAAgBI,MAAhB,CAAL,EAA8B;AAC7B,QAAM,IAAIC,OAAOC,KAAX,CAAiB,cAAjB,EAAiC,cAAjC,EAAiD;AACtD,eAAY;AAD0C,GAAjD,CAAN;AAGA;;AACD,QAAOR,WAAWU,MAAX,CAAkBC,KAAlB,CAAwB0D,qBAAxB,CAA8CnE,GAA9C,EAAmDkE,cAAnD,CAAP;AACA,CAPD,C;;;;;;;;;;;ACAA7D,OAAO+D,OAAP,CAAe;AACdC,kBAAiBrE,GAAjB,EAAsBsE,OAAtB,EAA+BC,KAA/B,EAAsC;AACrC,MAAI,CAAClE,OAAOmE,MAAP,EAAL,EAAsB;AACrB,SAAM,IAAInE,OAAOC,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAC5D,gBAAY;AADgD,IAAvD,CAAN;AAGA;;AACD,MAAI,CAACJ,MAAMC,IAAN,CAAWH,GAAX,EAAgBI,MAAhB,CAAL,EAA8B;AAC7B,SAAM,IAAIC,OAAOC,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAC5DmE,YAAQ;AADoD,IAAvD,CAAN;AAGA;;AACD,MAAI,CAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,kBAA1B,EAA8C,iBAA9C,EAAiE,UAAjE,EAA6E,UAA7E,EAAyF,mBAAzF,EAA8G,gBAA9G,EAAgI,SAAhI,EAA2I,UAA3I,EAAuJ,WAAvJ,EAAoKC,IAApK,CAA0KzC,CAAD,IAAOA,MAAMqC,OAAtL,CAAL,EAAqM;AACpM,SAAM,IAAIjE,OAAOC,KAAX,CAAiB,wBAAjB,EAA2C,2BAA3C,EAAwE;AAC7EmE,YAAQ;AADqE,IAAxE,CAAN;AAGA;;AACD,MAAI,CAAC3E,WAAW6E,KAAX,CAAiBC,aAAjB,CAA+BvE,OAAOmE,MAAP,EAA/B,EAAgD,WAAhD,EAA6DxE,GAA7D,CAAL,EAAwE;AACvE,SAAM,IAAIK,OAAOC,KAAX,CAAiB,0BAAjB,EAA6C,6BAA7C,EAA4E;AACjFmE,YAAQ,kBADyE;AAEjFI,YAAQ;AAFyE,IAA5E,CAAN;AAIA;;AACD,MAAIP,YAAY,SAAZ,IAAyB,CAACxE,WAAW6E,KAAX,CAAiBC,aAAjB,CAA+B,KAAKJ,MAApC,EAA4C,0BAA5C,CAA9B,EAAuG;AACtG,SAAM,IAAInE,OAAOC,KAAX,CAAiB,0BAAjB,EAA6C,4CAA7C,EAA2F;AAChGmE,YAAQ,kBADwF;AAEhGI,YAAQ;AAFwF,IAA3F,CAAN;AAIA;;AACD,QAAM7D,OAAOlB,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBQ,WAAxB,CAAoCjB,GAApC,CAAb;;AACA,MAAIgB,QAAQ,IAAZ,EAAkB;AACjB,OAAIsD,YAAY,UAAZ,IAA0BC,UAAUvD,KAAKG,CAAzC,IAA8CoD,UAAU,GAAxD,IAA+D,CAACzE,WAAW6E,KAAX,CAAiBC,aAAjB,CAA+B,KAAKJ,MAApC,EAA4C,UAA5C,CAApE,EAA6H;AAC5H,UAAM,IAAInE,OAAOC,KAAX,CAAiB,0BAAjB,EAA6C,6DAA7C,EAA4G;AACjHmE,aAAQ,kBADyG;AAEjHI,aAAQ;AAFyG,KAA5G,CAAN;AAIA;;AACD,OAAIP,YAAY,UAAZ,IAA0BC,UAAUvD,KAAKG,CAAzC,IAA8CoD,UAAU,GAAxD,IAA+D,CAACzE,WAAW6E,KAAX,CAAiBC,aAAjB,CAA+B,KAAKJ,MAApC,EAA4C,UAA5C,CAApE,EAA6H;AAC5H,UAAM,IAAInE,OAAOC,KAAX,CAAiB,0BAAjB,EAA6C,4DAA7C,EAA2G;AAChHmE,aAAQ,kBADwG;AAEhHI,aAAQ;AAFwG,KAA3G,CAAN;AAIA;;AACD,WAAQP,OAAR;AACC,SAAK,UAAL;AACClB,YAAOtD,WAAWkD,YAAX,CAAwBhD,GAAxB,EAA6BuE,KAA7B,EAAoClE,OAAOQ,IAAP,EAApC,CAAP;AACA;;AACD,SAAK,WAAL;AACC,SAAI0D,UAAUvD,KAAK8D,KAAnB,EAA0B;AACzBhF,iBAAWyC,aAAX,CAAyBvC,GAAzB,EAA8BuE,KAA9B,EAAqClE,OAAOQ,IAAP,EAArC;AACA;;AACD;;AACD,SAAK,kBAAL;AACC,SAAI0D,UAAUvD,KAAK+D,YAAnB,EAAiC;AAChCjF,iBAAW8C,oBAAX,CAAgC5C,GAAhC,EAAqCuE,KAArC,EAA4ClE,OAAOQ,IAAP,EAA5C;AACA;;AACD;;AACD,SAAK,iBAAL;AACC,SAAI0D,UAAUvD,KAAKgE,WAAnB,EAAgC;AAC/BlF,iBAAW+D,mBAAX,CAA+B7D,GAA/B,EAAoCuE,KAApC,EAA2ClE,OAAOQ,IAAP,EAA3C;AACA;;AACD;;AACD,SAAK,UAAL;AACC,SAAI0D,UAAUvD,KAAKG,CAAnB,EAAsB;AACrBrB,iBAAWa,YAAX,CAAwBX,GAAxB,EAA6BuE,KAA7B,EAAoClE,OAAOQ,IAAP,EAApC;AACA;;AACD;;AACD,SAAK,WAAL;AACCoE,WAAMV,KAAN,EAAa;AACZnC,eAAShC,MADG;AAEZ8E,cAAQ,CAAC;AACRC,cAAO/E,MADC;AAERgF,gBAAShF;AAFD,OAAD;AAFI,MAAb;AAOAN,gBAAWuF,iBAAX,CAA6BrF,GAA7B,EAAkCuE,KAAlC;AACA;;AACD,SAAK,UAAL;AACC,SAAIA,UAAUvD,KAAKsE,EAAnB,EAAuB;AACtBxF,iBAAW4D,gBAAX,CAA4B1D,GAA5B,EAAiCuE,KAAjC,EAAwClE,OAAOQ,IAAP,EAAxC;AACA;;AACD;;AACD,SAAK,mBAAL;AACC,SAAI0D,UAAUvD,KAAKuE,iBAAnB,EAAsC;AACrCzF,iBAAWC,qBAAX,CAAiCC,GAAjC,EAAsCuE,KAAtC,EAA6ClE,OAAOQ,IAAP,EAA7C;AACA;;AACD;;AACD,SAAK,gBAAL;AACC,SAAI0D,UAAUvD,KAAKwE,MAAnB,EAA2B;AAC1B1F,iBAAWmE,sBAAX,CAAkCjE,GAAlC,EAAuCuE,KAAvC,EAA8ClE,OAAOQ,IAAP,EAA9C;AACA;;AACD;;AACD,SAAK,UAAL;AACCf,gBAAWU,MAAX,CAAkBC,KAAlB,CAAwBgF,eAAxB,CAAwCzF,GAAxC,EAA6CI,OAAOmE,KAAP,CAA7C;AACA;;AACD,SAAK,SAAL;AACCzE,gBAAWU,MAAX,CAAkBC,KAAlB,CAAwBiF,eAAxB,CAAwC1F,GAAxC,EAA6CuE,KAA7C;AArDF;AAuDA;;AACD,SAAO;AACNnD,WAAQ,IADF;AAENpB,QAAKgB,KAAKE;AAFJ,GAAP;AAIA;;AAvGa,CAAf,E;;;;;;;;;;;ACAApB,WAAWU,MAAX,CAAkBuB,QAAlB,CAA2BC,qDAA3B,GAAmF,UAASjB,IAAT,EAAe4E,MAAf,EAAuBnE,OAAvB,EAAgCX,IAAhC,EAAsC+E,SAAtC,EAAiD;AACnI,QAAO,KAAKC,kCAAL,CAAwC9E,IAAxC,EAA8C4E,MAA9C,EAAsDnE,OAAtD,EAA+DX,IAA/D,EAAqE+E,SAArE,CAAP;AACA,CAFD;;AAIA9F,WAAWU,MAAX,CAAkBuB,QAAlB,CAA2B0B,0CAA3B,GAAwE,UAASkC,MAAT,EAAiBG,QAAjB,EAA2BjF,IAA3B,EAAiC+E,SAAjC,EAA4C;AACnH,QAAO,KAAKC,kCAAL,CAAwC,GAAxC,EAA6CF,MAA7C,EAAqDG,QAArD,EAA+DjF,IAA/D,EAAqE+E,SAArE,CAAP;AACA,CAFD,C;;;;;;;;;;;ACJA9F,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBuD,kBAAxB,GAA6C,UAAS9C,GAAT,EAAc8D,WAAd,EAA2B;AACvE,OAAMe,QAAQ;AACb7E;AADa,EAAd;AAGA,OAAMwB,SAAS;AACdsD,QAAM;AACLhB;AADK;AADQ,EAAf;AAKA,QAAO,KAAKtC,MAAL,CAAYqD,KAAZ,EAAmBrD,MAAnB,CAAP;AACA,CAVD;;AAYA5C,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBmD,eAAxB,GAA0C,UAAS1C,GAAT,EAAcyC,QAAd,EAAwB;AACjE,OAAMoC,QAAQ;AACb7E;AADa,EAAd;AAGA,OAAMwB,SAAS;AACdsD,QAAM;AACLV,OAAI3B;AADC;AADQ,EAAf;;AAKA,KAAIA,QAAJ,EAAc;AACb7D,aAAWU,MAAX,CAAkBc,aAAlB,CAAgC2E,YAAhC,CAA6C/E,GAA7C,EAAkDgF,OAAlD,CAA0D,UAASC,YAAT,EAAuB;AAChF,OAAIA,aAAaC,KAAb,IAAsB,IAA1B,EAAgC;AAC/B;AACA;;AACD,SAAMvF,OAAOsF,aAAaC,KAA1B;;AACA,OAAItG,WAAW6E,KAAX,CAAiBC,aAAjB,CAA+B/D,KAAKK,GAApC,EAAyC,eAAzC,MAA8D,KAAlE,EAAyE;AACxE,QAAI,CAACwB,OAAOsD,IAAP,CAAYK,KAAjB,EAAwB;AACvB3D,YAAOsD,IAAP,CAAYK,KAAZ,GAAoB,EAApB;AACA;;AACD,WAAO3D,OAAOsD,IAAP,CAAYK,KAAZ,CAAkBC,IAAlB,CAAuBzF,KAAK0F,QAA5B,CAAP;AACA;AACD,GAXD;AAYA,EAbD,MAaO;AACN7D,SAAO8D,MAAP,GAAgB;AACfH,UAAO;AADQ,GAAhB;AAGA;;AACD,QAAO,KAAK3D,MAAL,CAAYqD,KAAZ,EAAmBrD,MAAnB,CAAP;AACA,CA5BD;;AA8BA5C,WAAWU,MAAX,CAAkBC,KAAlB,CAAwBC,gCAAxB,GAA2D,UAASQ,GAAT,EAAcuF,aAAd,EAA6B;AACvF,OAAMV,QAAQ;AACb7E;AADa,EAAd;AAGA,OAAMwB,SAAS;AACdsD,QAAM;AACLT,sBAAmBkB;AADd;AADQ,EAAf;AAKA,QAAO,KAAK/D,MAAL,CAAYqD,KAAZ,EAAmBrD,MAAnB,CAAP;AACA,CAVD;;AAYA5C,WAAWU,MAAX,CAAkBC,KAAlB,CAAwB0D,qBAAxB,GAAgD,UAASjD,GAAT,EAAcgD,cAAd,EAA8B;AAC7E,OAAM6B,QAAQ;AACb7E;AADa,EAAd;AAGA,OAAMwB,SAAS;AACdsD,QAAM;AACLR,WAAQtB;AADH;AADQ,EAAf;AAKA,QAAO,KAAKxB,MAAL,CAAYqD,KAAZ,EAAmBrD,MAAnB,CAAP;AACA,CAVD,C;;;;;;;;;;;ACtDArC,OAAOqG,OAAP,CAAe,YAAW;AACzB5G,YAAWU,MAAX,CAAkBmG,WAAlB,CAA8BC,MAA9B,CAAqC,eAArC,EAAsD;AAACC,gBAAc;AAAEC,UAAO,CAAC,OAAD,EAAU,OAAV,EAAmB,WAAnB;AAAT;AAAf,EAAtD;AACAhH,YAAWU,MAAX,CAAkBmG,WAAlB,CAA8BC,MAA9B,CAAqC,cAArC,EAAqD;AAACC,gBAAc;AAAEC,UAAO,CAAC,OAAD,EAAU,OAAV;AAAT;AAAf,EAArD;AACAhH,YAAWU,MAAX,CAAkBmG,WAAlB,CAA8BC,MAA9B,CAAqC,yBAArC,EAAgE;AAACC,gBAAc;AAAEC,UAAO,CAAC,OAAD,EAAU,OAAV;AAAT;AAAf,EAAhE;AACA,CAJD,E","file":"/packages/rocketchat_channel-settings.js","sourcesContent":["RocketChat.saveReactWhenReadOnly = function(rid, allowReact) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', { function: 'RocketChat.saveReactWhenReadOnly' });\n\t}\n\n\treturn RocketChat.models.Rooms.setAllowReactingWhenReadOnlyById(rid, allowReact);\n};\n","\nRocketChat.saveRoomType = function(rid, roomType, user, sendMessage = true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomType'\n\t\t});\n\t}\n\tif (roomType !== 'c' && roomType !== 'p') {\n\t\tthrow new Meteor.Error('error-invalid-room-type', 'error-invalid-room-type', {\n\t\t\t'function': 'RocketChat.saveRoomType',\n\t\t\ttype: roomType\n\t\t});\n\t}\n\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\tif (room == null) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'error-invalid-room', {\n\t\t\t'function': 'RocketChat.saveRoomType',\n\t\t\t_id: rid\n\t\t});\n\t}\n\tif (room.t === 'd') {\n\t\tthrow new Meteor.Error('error-direct-room', 'Can\\'t change type of direct rooms', {\n\t\t\t'function': 'RocketChat.saveRoomType'\n\t\t});\n\t}\n\tconst result = RocketChat.models.Rooms.setTypeById(rid, roomType) && RocketChat.models.Subscriptions.updateTypeByRoomId(rid, roomType);\n\tif (result && sendMessage) {\n\t\tlet message;\n\t\tif (roomType === 'c') {\n\t\t\tmessage = TAPi18n.__('Channel', {\n\t\t\t\tlng: user && user.language || RocketChat.settings.get('language') || 'en'\n\t\t\t});\n\t\t} else {\n\t\t\tmessage = TAPi18n.__('Private_Group', {\n\t\t\t\tlng: user && user.language || RocketChat.settings.get('language') || 'en'\n\t\t\t});\n\t\t}\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_privacy', rid, message, user);\n\t}\n\treturn result;\n};\n","import s from 'underscore.string';\n\nRocketChat.saveRoomTopic = function(rid, roomTopic, user, sendMessage = true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomTopic'\n\t\t});\n\t}\n\troomTopic = s.escapeHTML(roomTopic);\n\tconst update = RocketChat.models.Rooms.setTopicById(rid, roomTopic);\n\tif (update && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_topic', rid, roomTopic, user);\n\t}\n\treturn update;\n};\n","import s from 'underscore.string';\n\nRocketChat.saveRoomAnnouncement = function(rid, roomAnnouncement, user, sendMessage=true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', { function: 'RocketChat.saveRoomAnnouncement' });\n\t}\n\n\troomAnnouncement = s.escapeHTML(roomAnnouncement);\n\tconst updated = RocketChat.models.Rooms.setAnnouncementById(rid, roomAnnouncement);\n\tif (updated && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_announcement', rid, roomAnnouncement, user);\n\t}\n\n\treturn updated;\n};\n","\nRocketChat.saveRoomName = function(rid, displayName, user, sendMessage = true) {\n\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\tif (RocketChat.roomTypes.roomTypes[room.t].preventRenaming()) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t'function': 'RocketChat.saveRoomdisplayName'\n\t\t});\n\t}\n\tif (displayName === room.name) {\n\t\treturn;\n\t}\n\n\tconst slugifiedRoomName = RocketChat.getValidRoomName(displayName, rid);\n\n\tconst update = RocketChat.models.Rooms.setNameById(rid, slugifiedRoomName, displayName) && RocketChat.models.Subscriptions.updateNameAndAlertByRoomId(rid, slugifiedRoomName, displayName);\n\n\tif (update && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomRenamedWithRoomIdRoomNameAndUser(rid, displayName, user);\n\t}\n\treturn displayName;\n};\n","RocketChat.saveRoomReadOnly = function(rid, readOnly) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomReadOnly'\n\t\t});\n\t}\n\treturn RocketChat.models.Rooms.setReadOnlyById(rid, readOnly);\n};\n","import s from 'underscore.string';\n\nRocketChat.saveRoomDescription = function(rid, roomDescription, user) {\n\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomDescription'\n\t\t});\n\t}\n\tconst escapedRoomDescription = s.escapeHTML(roomDescription);\n\tconst update = RocketChat.models.Rooms.setDescriptionById(rid, escapedRoomDescription);\n\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_description', rid, escapedRoomDescription, user);\n\treturn update;\n};\n","RocketChat.saveRoomSystemMessages = function(rid, systemMessages) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomSystemMessages'\n\t\t});\n\t}\n\treturn RocketChat.models.Rooms.setSystemMessagesById(rid, systemMessages);\n};\n","Meteor.methods({\n\tsaveRoomSettings(rid, setting, value) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t'function': 'RocketChat.saveRoomName'\n\t\t\t});\n\t\t}\n\t\tif (!Match.test(rid, String)) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'saveRoomSettings'\n\t\t\t});\n\t\t}\n\t\tif (!['roomName', 'roomTopic', 'roomAnnouncement', 'roomDescription', 'roomType', 'readOnly', 'reactWhenReadOnly', 'systemMessages', 'default', 'joinCode', 'tokenpass'].some((s) => s === setting)) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings provided', {\n\t\t\t\tmethod: 'saveRoomSettings'\n\t\t\t});\n\t\t}\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'edit-room', rid)) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room'\n\t\t\t});\n\t\t}\n\t\tif (setting === 'default' && !RocketChat.authz.hasPermission(this.userId, 'view-room-administration')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Viewing_room_administration'\n\t\t\t});\n\t\t}\n\t\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\t\tif (room != null) {\n\t\t\tif (setting === 'roomType' && value !== room.t && value === 'c' && !RocketChat.authz.hasPermission(this.userId, 'create-c')) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a private group to a public channel is not allowed', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Type'\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (setting === 'roomType' && value !== room.t && value === 'p' && !RocketChat.authz.hasPermission(this.userId, 'create-p')) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a public channel to a private room is not allowed', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Type'\n\t\t\t\t});\n\t\t\t}\n\t\t\tswitch (setting) {\n\t\t\t\tcase 'roomName':\n\t\t\t\t\tname = RocketChat.saveRoomName(rid, value, Meteor.user());\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomTopic':\n\t\t\t\t\tif (value !== room.topic) {\n\t\t\t\t\t\tRocketChat.saveRoomTopic(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomAnnouncement':\n\t\t\t\t\tif (value !== room.announcement) {\n\t\t\t\t\t\tRocketChat.saveRoomAnnouncement(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomDescription':\n\t\t\t\t\tif (value !== room.description) {\n\t\t\t\t\t\tRocketChat.saveRoomDescription(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomType':\n\t\t\t\t\tif (value !== room.t) {\n\t\t\t\t\t\tRocketChat.saveRoomType(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tokenpass':\n\t\t\t\t\tcheck(value, {\n\t\t\t\t\t\trequire: String,\n\t\t\t\t\t\ttokens: [{\n\t\t\t\t\t\t\ttoken: String,\n\t\t\t\t\t\t\tbalance: String\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\t\t\t\t\tRocketChat.saveRoomTokenpass(rid, value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'readOnly':\n\t\t\t\t\tif (value !== room.ro) {\n\t\t\t\t\t\tRocketChat.saveRoomReadOnly(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'reactWhenReadOnly':\n\t\t\t\t\tif (value !== room.reactWhenReadOnly) {\n\t\t\t\t\t\tRocketChat.saveReactWhenReadOnly(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'systemMessages':\n\t\t\t\t\tif (value !== room.sysMes) {\n\t\t\t\t\t\tRocketChat.saveRoomSystemMessages(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'joinCode':\n\t\t\t\t\tRocketChat.models.Rooms.setJoinCodeById(rid, String(value));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'default':\n\t\t\t\t\tRocketChat.models.Rooms.saveDefaultById(rid, value);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tresult: true,\n\t\t\trid: room._id\n\t\t};\n\t}\n});\n","RocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser = function(type, roomId, message, user, extraData) {\n\treturn this.createWithTypeRoomIdMessageAndUser(type, roomId, message, user, extraData);\n};\n\nRocketChat.models.Messages.createRoomRenamedWithRoomIdRoomNameAndUser = function(roomId, roomName, user, extraData) {\n\treturn this.createWithTypeRoomIdMessageAndUser('r', roomId, roomName, user, extraData);\n};\n","RocketChat.models.Rooms.setDescriptionById = function(_id, description) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tdescription\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setReadOnlyById = function(_id, readOnly) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tro: readOnly\n\t\t}\n\t};\n\tif (readOnly) {\n\t\tRocketChat.models.Subscriptions.findByRoomId(_id).forEach(function(subscription) {\n\t\t\tif (subscription._user == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst user = subscription._user;\n\t\t\tif (RocketChat.authz.hasPermission(user._id, 'post-readonly') === false) {\n\t\t\t\tif (!update.$set.muted) {\n\t\t\t\t\tupdate.$set.muted = [];\n\t\t\t\t}\n\t\t\t\treturn update.$set.muted.push(user.username);\n\t\t\t}\n\t\t});\n\t} else {\n\t\tupdate.$unset = {\n\t\t\tmuted: ''\n\t\t};\n\t}\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setAllowReactingWhenReadOnlyById = function(_id, allowReacting) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\treactWhenReadOnly: allowReacting\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setSystemMessagesById = function(_id, systemMessages) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tsysMes: systemMessages\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n","Meteor.startup(function() {\n\tRocketChat.models.Permissions.upsert('post-readonly', {$setOnInsert: { roles: ['admin', 'owner', 'moderator'] } });\n\tRocketChat.models.Permissions.upsert('set-readonly', {$setOnInsert: { roles: ['admin', 'owner'] } });\n\tRocketChat.models.Permissions.upsert('set-react-when-readonly', {$setOnInsert: { roles: ['admin', 'owner'] }});\n});\n"]}