{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:custom-oauth/server/custom_oauth_server.js"],"names":["module","export","CustomOAuth","_","watch","require","default","v","logger","Logger","Services","BeforeUpdateOrCreateUserFromExternalService","constructor","name","options","debug","Match","test","String","Meteor","Error","configure","userAgent","release","Accounts","oauth","registerService","addHookToProcessUser","Object","serverURL","tokenPath","identityPath","tokenSentVia","identityTokenSentVia","usernameField","trim","mergeUsers","addAutopublishFields","getAccessToken","query","config","ServiceConfiguration","configurations","findOne","service","ConfigError","response","undefined","allOptions","headers","Accept","params","code","redirect_uri","OAuth","_redirectUri","grant_type","state","clientId","openSecret","secret","HTTP","post","err","error","message","extend","data","JSON","parse","content","access_token","getIdentity","accessToken","get","stringify","self","identity","_id","id","result","ID","user_id","CharacterID","user","userid","userid_sec","email","user_email","phid","sub","emails","Array","isArray","length","address","serviceData","_OAuthCustom","profile","username","nickname","CharacterName","userName","preferred_username","retrieveCredential","credentialToken","credentialSecret","getUsername","split","reduce","prev","curr","push","serviceName","RocketChat","models","Users","findOneByUsername","services","serviceIdKey","update","$set","validateNewUser","updateOrCreateUserFromExternalService","hook","apply","arguments"],"mappings":"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","file":"/packages/rocketchat_custom-oauth.js","sourcesContent":["/*globals OAuth*/\nimport _ from 'underscore';\n\nconst logger = new Logger('CustomOAuth');\n\nconst Services = {};\nconst BeforeUpdateOrCreateUserFromExternalService = [];\n\nexport class CustomOAuth {\n\tconstructor(name, options) {\n\t\tlogger.debug('Init CustomOAuth', name, options);\n\n\t\tthis.name = name;\n\t\tif (!Match.test(this.name, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Name is required and must be String');\n\t\t}\n\n\t\tif (Services[this.name]) {\n\t\t\tServices[this.name].configure(options);\n\t\t\treturn;\n\t\t}\n\n\t\tServices[this.name] = this;\n\n\t\tthis.configure(options);\n\n\t\tthis.userAgent = 'Meteor';\n\t\tif (Meteor.release) {\n\t\t\tthis.userAgent += `/${ Meteor.release }`;\n\t\t}\n\n\t\tAccounts.oauth.registerService(this.name);\n\t\tthis.registerService();\n\t\tthis.addHookToProcessUser();\n\t}\n\n\tconfigure(options) {\n\t\tif (!Match.test(options, Object)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options is required and must be Object');\n\t\t}\n\n\t\tif (!Match.test(options.serverURL, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\n\t\t}\n\n\t\tif (!Match.test(options.tokenPath, String)) {\n\t\t\toptions.tokenPath = '/oauth/token';\n\t\t}\n\n\t\tif (!Match.test(options.identityPath, String)) {\n\t\t\toptions.identityPath = '/me';\n\t\t}\n\n\t\tthis.serverURL = options.serverURL;\n\t\tthis.tokenPath = options.tokenPath;\n\t\tthis.identityPath = options.identityPath;\n\t\tthis.tokenSentVia = options.tokenSentVia;\n\t\tthis.identityTokenSentVia = options.identityTokenSentVia;\n\t\tthis.usernameField = (options.usernameField || '').trim();\n\t\tthis.mergeUsers = options.mergeUsers;\n\n\t\tif (this.identityTokenSentVia == null || this.identityTokenSentVia === 'default') {\n\t\t\tthis.identityTokenSentVia = this.tokenSentVia;\n\t\t}\n\n\t\tif (!/^https?:\\/\\/.+/.test(this.tokenPath)) {\n\t\t\tthis.tokenPath = this.serverURL + this.tokenPath;\n\t\t}\n\n\t\tif (!/^https?:\\/\\/.+/.test(this.identityPath)) {\n\t\t\tthis.identityPath = this.serverURL + this.identityPath;\n\t\t}\n\n\t\tif (Match.test(options.addAutopublishFields, Object)) {\n\t\t\tAccounts.addAutopublishFields(options.addAutopublishFields);\n\t\t}\n\t}\n\n\tgetAccessToken(query) {\n\t\tconst config = ServiceConfiguration.configurations.findOne({service: this.name});\n\t\tif (!config) {\n\t\t\tthrow new ServiceConfiguration.ConfigError();\n\t\t}\n\n\t\tlet response = undefined;\n\n\t\tconst allOptions = {\n\t\t\theaders: {\n\t\t\t\t'User-Agent': this.userAgent, // http://doc.gitlab.com/ce/api/users.html#Current-user\n\t\t\t\tAccept: 'application/json'\n\t\t\t},\n\t\t\tparams: {\n\t\t\t\tcode: query.code,\n\t\t\t\tredirect_uri: OAuth._redirectUri(this.name, config),\n\t\t\t\tgrant_type: 'authorization_code',\n\t\t\t\tstate: query.state\n\t\t\t}\n\t\t};\n\n\t\t// Only send clientID / secret once on header or payload.\n\t\tif (this.tokenSentVia === 'header') {\n\t\t\tallOptions['auth'] = `${ config.clientId }:${ OAuth.openSecret(config.secret) }`;\n\t\t} else {\n\t\t\tallOptions['params']['client_secret'] = OAuth.openSecret(config.secret);\n\t\t\tallOptions['params']['client_id'] = config.clientId;\n\t\t}\n\n\t\ttry {\n\t\t\tresponse = HTTP.post(this.tokenPath, allOptions);\n\t\t} catch (err) {\n\t\t\tconst error = new Error(`Failed to complete OAuth handshake with ${ this.name } at ${ this.tokenPath }. ${ err.message }`);\n\t\t\tthrow _.extend(error, {response: err.response});\n\t\t}\n\n\t\tlet data;\n\t\tif (response.data) {\n\t\t\tdata = response.data;\n\t\t} else {\n\t\t\tdata = JSON.parse(response.content);\n\t\t}\n\n\t\tif (data.error) { //if the http response was a json object with an error attribute\n\t\t\tthrow new Error(`Failed to complete OAuth handshake with ${ this.name } at ${ this.tokenPath }. ${ data.error }`);\n\t\t} else {\n\t\t\treturn data.access_token;\n\t\t}\n\t}\n\n\tgetIdentity(accessToken) {\n\t\tconst params = {};\n\t\tconst headers = {\n\t\t\t'User-Agent': this.userAgent // http://doc.gitlab.com/ce/api/users.html#Current-user\n\t\t};\n\n\t\tif (this.identityTokenSentVia === 'header') {\n\t\t\theaders['Authorization'] = `Bearer ${ accessToken }`;\n\t\t} else {\n\t\t\tparams['access_token'] = accessToken;\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = HTTP.get(this.identityPath, {\n\t\t\t\theaders,\n\t\t\t\tparams\n\t\t\t});\n\n\t\t\tlet data;\n\n\t\t\tif (response.data) {\n\t\t\t\tdata = response.data;\n\t\t\t} else {\n\t\t\t\tdata = JSON.parse(response.content);\n\t\t\t}\n\n\t\t\tlogger.debug('Identity response', JSON.stringify(data, null, 2));\n\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\tconst error = new Error(`Failed to fetch identity from ${ this.name } at ${ this.identityPath }. ${ err.message }`);\n\t\t\tthrow _.extend(error, {response: err.response});\n\t\t}\n\t}\n\n\tregisterService() {\n\t\tconst self = this;\n\t\tOAuth.registerService(this.name, 2, null, (query) => {\n\t\t\tconst accessToken = self.getAccessToken(query);\n\t\t\t// console.log 'at:', accessToken\n\n\t\t\tlet identity = self.getIdentity(accessToken);\n\n\t\t\tif (identity) {\n\t\t\t\t// Set 'id' to '_id' for any sources that provide it\n\t\t\t\tif (identity._id && !identity.id) {\n\t\t\t\t\tidentity.id = identity._id;\n\t\t\t\t}\n\n\t\t\t\t// Fix for Reddit\n\t\t\t\tif (identity.result) {\n\t\t\t\t\tidentity = identity.result;\n\t\t\t\t}\n\n\t\t\t\t// Fix WordPress-like identities having 'ID' instead of 'id'\n\t\t\t\tif (identity.ID && !identity.id) {\n\t\t\t\t\tidentity.id = identity.ID;\n\t\t\t\t}\n\n\t\t\t\t// Fix Auth0-like identities having 'user_id' instead of 'id'\n\t\t\t\tif (identity.user_id && !identity.id) {\n\t\t\t\t\tidentity.id = identity.user_id;\n\t\t\t\t}\n\n\t\t\t\tif (identity.CharacterID && !identity.id) {\n\t\t\t\t\tidentity.id = identity.CharacterID;\n\t\t\t\t}\n\n\t\t\t\t// Fix Dataporten having 'user.userid' instead of 'id'\n\t\t\t\tif (identity.user && identity.user.userid && !identity.id) {\n\t\t\t\t\tif (identity.user.userid_sec && identity.user.userid_sec[0]) {\n\t\t\t\t\t\tidentity.id = identity.user.userid_sec[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tidentity.id = identity.user.userid;\n\t\t\t\t\t}\n\t\t\t\t\tidentity.email = identity.user.email;\n\t\t\t\t}\n\t\t\t\t// Fix for Xenforo [BD]API plugin for 'user.user_id; instead of 'id'\n\t\t\t\tif (identity.user && identity.user.user_id && !identity.id) {\n\t\t\t\t\tidentity.id = identity.user.user_id;\n\t\t\t\t\tidentity.email = identity.user.user_email;\n\t\t\t\t}\n\t\t\t\t// Fix general 'phid' instead of 'id' from phabricator\n\t\t\t\tif (identity.phid && !identity.id) {\n\t\t\t\t\tidentity.id = identity.phid;\n\t\t\t\t}\n\n\t\t\t\t// Fix Keycloak-like identities having 'sub' instead of 'id'\n\t\t\t\tif (identity.sub && !identity.id) {\n\t\t\t\t\tidentity.id = identity.sub;\n\t\t\t\t}\n\n\t\t\t\t// Fix general 'userid' instead of 'id' from provider\n\t\t\t\tif (identity.userid && !identity.id) {\n\t\t\t\t\tidentity.id = identity.userid;\n\t\t\t\t}\n\n\t\t\t\t// Fix when authenticating from a meteor app with 'emails' field\n\t\t\t\tif (!identity.email && (identity.emails && Array.isArray(identity.emails) && identity.emails.length >= 1)) {\n\t\t\t\t\tidentity.email = identity.emails[0].address ? identity.emails[0].address : undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log 'id:', JSON.stringify identity, null, '  '\n\n\t\t\tconst serviceData = {\n\t\t\t\t_OAuthCustom: true,\n\t\t\t\taccessToken\n\t\t\t};\n\n\t\t\t_.extend(serviceData, identity);\n\n\t\t\tconst data = {\n\t\t\t\tserviceData,\n\t\t\t\toptions: {\n\t\t\t\t\tprofile: {\n\t\t\t\t\t\tname: identity.name || identity.username || identity.nickname || identity.CharacterName || identity.userName || identity.preferred_username || (identity.user && identity.user.name)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// console.log data\n\n\t\t\treturn data;\n\t\t});\n\t}\n\n\tretrieveCredential(credentialToken, credentialSecret) {\n\t\treturn OAuth.retrieveCredential(credentialToken, credentialSecret);\n\t}\n\n\tgetUsername(data) {\n\t\tlet username = '';\n\n\t\tusername = this.usernameField.split('.').reduce(function(prev, curr) {\n\t\t\treturn prev ? prev[curr] : undefined;\n\t\t}, data);\n\t\tif (!username) {\n\t\t\tthrow new Meteor.Error('field_not_found', `Username field \"${ this.usernameField }\" not found in data`, data);\n\t\t}\n\t\treturn username;\n\t}\n\n\taddHookToProcessUser() {\n\t\tBeforeUpdateOrCreateUserFromExternalService.push((serviceName, serviceData/*, options*/) => {\n\t\t\tif (serviceName !== this.name) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.usernameField) {\n\t\t\t\tconst username = this.getUsername(serviceData);\n\n\t\t\t\tconst user = RocketChat.models.Users.findOneByUsername(username);\n\t\t\t\tif (!user) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// User already created or merged\n\t\t\t\tif (user.services && user.services[serviceName] && user.services[serviceName].id === serviceData.id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.mergeUsers !== true) {\n\t\t\t\t\tthrow new Meteor.Error('CustomOAuth', `User with username ${ user.username } already exists`);\n\t\t\t\t}\n\n\t\t\t\tconst serviceIdKey = `services.${ serviceName }.id`;\n\t\t\t\tconst update = {\n\t\t\t\t\t$set: {\n\t\t\t\t\t\t[serviceIdKey]: serviceData.id\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tRocketChat.models.Users.update({_id: user._id}, update);\n\t\t\t}\n\t\t});\n\n\t\tAccounts.validateNewUser((user) => {\n\t\t\tif (!user.services || !user.services[this.name] || !user.services[this.name].id) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (this.usernameField) {\n\t\t\t\tuser.username = this.getUsername(user.services[this.name]);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t}\n}\n\n\nconst updateOrCreateUserFromExternalService = Accounts.updateOrCreateUserFromExternalService;\nAccounts.updateOrCreateUserFromExternalService = function(/*serviceName, serviceData, options*/) {\n\tfor (const hook of BeforeUpdateOrCreateUserFromExternalService) {\n\t\thook.apply(this, arguments);\n\t}\n\n\treturn updateOrCreateUserFromExternalService.apply(this, arguments);\n};\n"]}