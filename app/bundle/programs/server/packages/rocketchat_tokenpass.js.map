{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:tokenpass/common.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/startup.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/functions/getProtectedTokenpassBalances.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/functions/getPublicTokenpassBalances.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/functions/saveRoomTokens.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/functions/saveRoomTokensMinimumBalance.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/functions/updateUserTokenpassBalances.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/models/indexes.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/models/Rooms.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/models/Subscriptions.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/models/Users.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/methods/findTokenChannels.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/methods/getChannelTokenpass.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/cronRemoveUsers.js","meteor://ðŸ’»app/packages/rocketchat:tokenpass/server/Tokenpass.js"],"names":["config","serverURL","identityPath","authorizePath","tokenPath","scope","tokenSentVia","usernameField","mergeUsers","addAutopublishFields","forLoggedInUser","forOtherUsers","Tokenpass","CustomOAuth","Meteor","isServer","startup","RocketChat","settings","get","key","value","configure","Tracker","autorun","addGroup","section","enableQuery","_id","add","type","public","i18nDescription","readonly","force","validateTokenAccess","userData","roomData","services","tokenpass","tcaBalances","validateAccess","authz","addRoomAccessValidator","room","user","models","Users","getTokenBalancesByUserId","callbacks","Error","method","Accounts","onLogin","updateUserTokenpassBalances","userAgent","release","getProtectedTokenpassBalances","accessToken","HTTP","headers","Accept","params","oauth_token","data","error","message","getPublicTokenpassBalances","saveRoomTokenpass","rid","Match","test","String","Rooms","setTokenpassById","s","module","watch","require","default","v","saveRoomTokensMinimumBalance","roomTokensMinimumBalance","minimumTokenBalance","parseFloat","escapeHTML","setMinimumTokenBalanceById","_","tcaPublicBalances","tcaProtectedBalances","balances","uniq","union","item","asset","setTokenpassTcaBalances","tryEnsureIndex","findByTokenpass","tokens","query","$in","_db","find","fetch","setTokensById","update","$set","findAllTokenChannels","$exists","options","fields","Subscriptions","findByRoomIds","roomIds","userId","findOne","methods","findTokenChannels","forEach","token","Object","keys","filter","getChannelTokenpass","check","findOneById","removeUsersFromTokenChannels","rooms","users","sub","u","push","userInfo","roomId","valid","removeUserFromRoom","defer","SyncedCron","name","schedule","parser","cron","job","compFunc","some","userToken","balance"],"mappings":"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","file":"/packages/rocketchat_tokenpass.js","sourcesContent":["/* global CustomOAuth */\n\nconst config = {\n\tserverURL: '',\n\tidentityPath: '/oauth/user',\n\tauthorizePath: '/oauth/authorize',\n\ttokenPath: '/oauth/access-token',\n\tscope: 'user,tca,private-balances',\n\ttokenSentVia: 'payload',\n\tusernameField: 'username',\n\tmergeUsers: true,\n\taddAutopublishFields: {\n\t\tforLoggedInUser: ['services.tokenpass'],\n\t\tforOtherUsers: ['services.tokenpass.name']\n\t}\n};\n\nconst Tokenpass = new CustomOAuth('tokenpass', config);\n\nif (Meteor.isServer) {\n\tMeteor.startup(function() {\n\t\tRocketChat.settings.get('API_Tokenpass_URL', function(key, value) {\n\t\t\tconfig.serverURL = value;\n\t\t\tTokenpass.configure(config);\n\t\t});\n\t});\n} else {\n\tMeteor.startup(function() {\n\t\tTracker.autorun(function() {\n\t\t\tif (RocketChat.settings.get('API_Tokenpass_URL')) {\n\t\t\t\tconfig.serverURL = RocketChat.settings.get('API_Tokenpass_URL');\n\t\t\t\tTokenpass.configure(config);\n\t\t\t}\n\t\t});\n\t});\n}\n","RocketChat.settings.addGroup('OAuth', function() {\n\tthis.section('Tokenpass', function() {\n\t\tconst enableQuery = {\n\t\t\t_id: 'Accounts_OAuth_Tokenpass',\n\t\t\tvalue: true\n\t\t};\n\n\t\tthis.add('Accounts_OAuth_Tokenpass', false, { type: 'boolean' });\n\t\tthis.add('API_Tokenpass_URL', '', { type: 'string', public: true, enableQuery, i18nDescription: 'API_Tokenpass_URL_Description' });\n\t\tthis.add('Accounts_OAuth_Tokenpass_id', '', { type: 'string', enableQuery });\n\t\tthis.add('Accounts_OAuth_Tokenpass_secret', '', { type: 'string', enableQuery });\n\t\tthis.add('Accounts_OAuth_Tokenpass_callback_url', '_oauth/tokenpass', { type: 'relativeUrl', readonly: true, force: true, enableQuery });\n\t});\n});\n\nfunction validateTokenAccess(userData, roomData) {\n\tif (!userData || !userData.services || !userData.services.tokenpass || !userData.services.tokenpass.tcaBalances) {\n\t\treturn false;\n\t}\n\n\treturn RocketChat.Tokenpass.validateAccess(roomData.tokenpass, userData.services.tokenpass.tcaBalances);\n}\n\nMeteor.startup(function() {\n\tRocketChat.authz.addRoomAccessValidator(function(room, user) {\n\t\tif (!room.tokenpass) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst userData = RocketChat.models.Users.getTokenBalancesByUserId(user._id);\n\n\t\treturn validateTokenAccess(userData, room);\n\t});\n\n\tRocketChat.callbacks.add('beforeJoinRoom', function(user, room) {\n\t\tif (room.tokenpass && !validateTokenAccess(user, room)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Token required', { method: 'joinRoom' });\n\t\t}\n\n\t\treturn room;\n\t});\n});\n\nAccounts.onLogin(function({ user }) {\n\tif (user && user.services && user.services.tokenpass) {\n\t\tRocketChat.updateUserTokenpassBalances(user);\n\t}\n});\n","let userAgent = 'Meteor';\nif (Meteor.release) { userAgent += `/${ Meteor.release }`; }\n\nRocketChat.getProtectedTokenpassBalances = function(accessToken) {\n\ttry {\n\t\treturn HTTP.get(\n\t\t\t`${ RocketChat.settings.get('API_Tokenpass_URL') }/api/v1/tca/protected/balances`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'User-Agent': userAgent\n\t\t\t\t},\n\t\t\t\tparams: {\n\t\t\t\t\toauth_token: accessToken\n\t\t\t\t}\n\t\t\t}).data;\n\t} catch (error) {\n\t\tthrow new Error(`Failed to fetch protected tokenpass balances from Tokenpass. ${ error.message }`);\n\t}\n};\n","let userAgent = 'Meteor';\nif (Meteor.release) { userAgent += `/${ Meteor.release }`; }\n\nRocketChat.getPublicTokenpassBalances = function(accessToken) {\n\ttry {\n\t\treturn HTTP.get(\n\t\t\t`${ RocketChat.settings.get('API_Tokenpass_URL') }/api/v1/tca/public/balances`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'User-Agent': userAgent\n\t\t\t\t},\n\t\t\t\tparams: {\n\t\t\t\t\toauth_token: accessToken\n\t\t\t\t}\n\t\t\t}).data;\n\t} catch (error) {\n\t\tthrow new Error(`Failed to fetch public tokenpass balances from Tokenpass. ${ error.message }`);\n\t}\n};\n","RocketChat.saveRoomTokenpass = function(rid, tokenpass) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomTokens'\n\t\t});\n\t}\n\n\treturn RocketChat.models.Rooms.setTokenpassById(rid, tokenpass);\n};\n","import s from 'underscore.string';\n\nRocketChat.saveRoomTokensMinimumBalance = function(rid, roomTokensMinimumBalance) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomTokensMinimumBalance'\n\t\t});\n\t}\n\n\tconst minimumTokenBalance = parseFloat(s.escapeHTML(roomTokensMinimumBalance));\n\n\treturn RocketChat.models.Rooms.setMinimumTokenBalanceById(rid, minimumTokenBalance);\n};\n","import _ from 'underscore';\n\nRocketChat.updateUserTokenpassBalances = function(user) {\n\tif (user && user.services && user.services.tokenpass) {\n\t\tconst tcaPublicBalances = RocketChat.getPublicTokenpassBalances(user.services.tokenpass.accessToken);\n\t\tconst tcaProtectedBalances = RocketChat.getProtectedTokenpassBalances(user.services.tokenpass.accessToken);\n\n\t\tconst balances = _.uniq(_.union(tcaPublicBalances, tcaProtectedBalances), false, item => item.asset);\n\n\t\tRocketChat.models.Users.setTokenpassTcaBalances(user._id, balances);\n\n\t\treturn balances;\n\t}\n};\n","Meteor.startup(function() {\n\tRocketChat.models.Rooms.tryEnsureIndex({ 'tokenpass.tokens.token': 1 });\n});\n","RocketChat.models.Rooms.findByTokenpass = function(tokens) {\n\tconst query = {\n\t\t'tokenpass.tokens.token': {\n\t\t\t$in: tokens\n\t\t}\n\t};\n\n\treturn this._db.find(query).fetch();\n};\n\nRocketChat.models.Rooms.setTokensById = function(_id, tokens) {\n\tconst update = {\n\t\t$set: {\n\t\t\t'tokenpass.tokens.token': tokens\n\t\t}\n\t};\n\n\treturn this.update({_id}, update);\n};\n\nRocketChat.models.Rooms.setTokenpassById = function(_id, tokenpass) {\n\tconst update = {\n\t\t$set: {\n\t\t\ttokenpass\n\t\t}\n\t};\n\n\treturn this.update({ _id }, update);\n};\n\nRocketChat.models.Rooms.findAllTokenChannels = function() {\n\tconst query = {\n\t\ttokenpass: { $exists: true }\n\t};\n\tconst options = {\n\t\tfields: {\n\t\t\ttokenpass: 1\n\t\t}\n\t};\n\treturn this._db.find(query, options);\n};\n","RocketChat.models.Subscriptions.findByRoomIds = function(roomIds) {\n\tconst query = {\n\t\trid: {\n\t\t\t$in: roomIds\n\t\t}\n\t};\n\tconst options = {\n\t\tfields: {\n\t\t\t'u._id': 1,\n\t\t\trid: 1\n\t\t}\n\t};\n\n\treturn this._db.find(query, options);\n};\n","RocketChat.models.Users.setTokenpassTcaBalances = function(_id, tcaBalances) {\n\tconst update = {\n\t\t$set: {\n\t\t\t'services.tokenpass.tcaBalances': tcaBalances\n\t\t}\n\t};\n\n\treturn this.update(_id, update);\n};\n\nRocketChat.models.Users.getTokenBalancesByUserId = function(userId) {\n\tconst query = {\n\t\t_id: userId\n\t};\n\n\tconst options = {\n\t\tfields: {\n\t\t\t'services.tokenpass.tcaBalances': 1\n\t\t}\n\t};\n\n\treturn this.findOne(query, options);\n};\n","Meteor.methods({\n\tfindTokenChannels() {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst user = Meteor.user();\n\n\t\tif (user.services && user.services.tokenpass && user.services.tokenpass.tcaBalances) {\n\t\t\tconst tokens = {};\n\t\t\tuser.services.tokenpass.tcaBalances.forEach(token => {\n\t\t\t\ttokens[token.asset] = 1;\n\t\t\t});\n\n\t\t\treturn RocketChat.models.Rooms.findByTokenpass(Object.keys(tokens))\n\t\t\t\t.filter(room => RocketChat.Tokenpass.validateAccess(room.tokenpass, user.services.tokenpass.tcaBalances));\n\t\t}\n\n\t\treturn [];\n\t}\n});\n","Meteor.methods({\n\tgetChannelTokenpass(rid) {\n\t\tcheck(rid, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getChannelTokenpass' });\n\t\t}\n\n\t\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'getChannelTokenpass' });\n\t\t}\n\n\t\treturn room.tokenpass;\n\t}\n});\n","/* globals SyncedCron */\nfunction removeUsersFromTokenChannels() {\n\tconst rooms = {};\n\n\tRocketChat.models.Rooms.findAllTokenChannels().forEach(room => {\n\t\trooms[room._id] = room.tokenpass;\n\t});\n\n\tconst users = {};\n\n\tRocketChat.models.Subscriptions.findByRoomIds(Object.keys(rooms)).forEach(sub => {\n\t\tif (!users[sub.u._id]) {\n\t\t\tusers[sub.u._id] = [];\n\t\t}\n\t\tusers[sub.u._id].push(sub.rid);\n\t});\n\n\tObject.keys(users).forEach(user => {\n\t\tconst userInfo = RocketChat.models.Users.findOneById(user);\n\n\t\tif (userInfo && userInfo.services && userInfo.services.tokenpass) {\n\t\t\tconst balances = RocketChat.updateUserTokenpassBalances(userInfo);\n\n\t\t\tusers[user].forEach(roomId => {\n\t\t\t\tconst valid = RocketChat.Tokenpass.validateAccess(rooms[roomId], balances);\n\n\t\t\t\tif (!valid) {\n\t\t\t\t\tRocketChat.removeUserFromRoom(roomId, userInfo);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nMeteor.startup(function() {\n\tMeteor.defer(function() {\n\t\tremoveUsersFromTokenChannels();\n\n\t\tSyncedCron.add({\n\t\t\tname: 'Remove users from Token Channels',\n\t\t\tschedule: (parser) => parser.cron('0 * * * *'),\n\t\t\tjob: removeUsersFromTokenChannels\n\t\t});\n\t});\n});\n","RocketChat.Tokenpass = {\n\tvalidateAccess(tokenpass, balances) {\n\t\tconst compFunc = tokenpass.require === 'any' ? 'some' : 'every';\n\t\treturn tokenpass.tokens[compFunc]((config) => {\n\t\t\treturn balances.some(userToken => {\n\t\t\t\treturn config.token === userToken.asset && parseFloat(config.balance) <= parseFloat(userToken.balance);\n\t\t\t});\n\t\t});\n\t}\n};\n"]}