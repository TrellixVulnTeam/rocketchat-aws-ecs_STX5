{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:2fa/server/lib/totp.js","meteor://ðŸ’»app/packages/rocketchat:2fa/server/methods/checkCodesRemaining.js","meteor://ðŸ’»app/packages/rocketchat:2fa/server/methods/disable.js","meteor://ðŸ’»app/packages/rocketchat:2fa/server/methods/enable.js","meteor://ðŸ’»app/packages/rocketchat:2fa/server/methods/regenerateCodes.js","meteor://ðŸ’»app/packages/rocketchat:2fa/server/methods/validateTempToken.js","meteor://ðŸ’»app/packages/rocketchat:2fa/server/models/users.js","meteor://ðŸ’»app/packages/rocketchat:2fa/server/loginHandler.js"],"names":["speakeasy","module","watch","require","default","v","RocketChat","TOTP","generateSecret","generateOtpauthURL","secret","username","otpauthURL","ascii","label","verify","token","backupTokens","userId","verified","length","hashedCode","SHA256","usedCode","indexOf","splice","models","Users","update2FABackupCodesByUserId","totp","encoding","generateCodes","codes","hashedCodes","i","code","Random","id","push","Meteor","methods","Error","user","services","enabled","remaining","hashedBackup","disable2FAByUserId","disable2FAAndSetTempSecretByUserId","base32","url","userToken","tempSecret","enable2FAAndSetSecretAndCodesByUserId","tempToken","update","_id","$set","backupCodes","$unset","Accounts","registerLoginHandler","options","_runLoginHandlers","login","callbacks","add","type","methodArguments"],"mappings":"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","file":"/packages/rocketchat_2fa.js","sourcesContent":["import speakeasy from 'speakeasy';\n\nRocketChat.TOTP = {\n\tgenerateSecret() {\n\t\treturn speakeasy.generateSecret();\n\t},\n\n\tgenerateOtpauthURL(secret, username) {\n\t\treturn speakeasy.otpauthURL({\n\t\t\tsecret: secret.ascii,\n\t\t\tlabel: `Rocket.Chat:${ username }`\n\t\t});\n\t},\n\n\tverify({ secret, token, backupTokens, userId }) {\n\t\tlet verified;\n\n\t\t// validates a backup code\n\t\tif (token.length === 8 && backupTokens) {\n\t\t\tconst hashedCode = SHA256(token);\n\t\t\tconst usedCode = backupTokens.indexOf(hashedCode);\n\n\t\t\tif (usedCode !== -1) {\n\t\t\t\tverified = true;\n\n\t\t\t\tbackupTokens.splice(usedCode, 1);\n\n\t\t\t\t// mark the code as used (remove it from the list)\n\t\t\t\tRocketChat.models.Users.update2FABackupCodesByUserId(userId, backupTokens);\n\t\t\t}\n\t\t} else {\n\t\t\tverified = speakeasy.totp.verify({\n\t\t\t\tsecret,\n\t\t\t\tencoding: 'base32',\n\t\t\t\ttoken\n\t\t\t});\n\t\t}\n\n\t\treturn verified;\n\t},\n\n\tgenerateCodes() {\n\t\t// generate 12 backup codes\n\t\tconst codes = [];\n\t\tconst hashedCodes = [];\n\t\tfor (let i = 0; i < 12; i++) {\n\t\t\tconst code = Random.id(8);\n\t\t\tcodes.push(code);\n\t\t\thashedCodes.push(SHA256(code));\n\t\t}\n\n\t\treturn { codes, hashedCodes };\n\t}\n};\n","Meteor.methods({\n\t'2fa:checkCodesRemaining'() {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('not-authorized');\n\t\t}\n\n\t\tconst user = Meteor.user();\n\n\t\tif (!user.services || !user.services.totp || !user.services.totp.enabled) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\treturn {\n\t\t\tremaining: user.services.totp.hashedBackup.length\n\t\t};\n\t}\n});\n","Meteor.methods({\n\t'2fa:disable'(code) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('not-authorized');\n\t\t}\n\n\t\tconst user = Meteor.user();\n\n\t\tconst verified = RocketChat.TOTP.verify({\n\t\t\tsecret: user.services.totp.secret,\n\t\t\ttoken: code,\n\t\t\tuserId: Meteor.userId(),\n\t\t\tbackupTokens: user.services.totp.hashedBackup\n\t\t});\n\n\t\tif (!verified) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn RocketChat.models.Users.disable2FAByUserId(Meteor.userId());\n\t}\n});\n","Meteor.methods({\n\t'2fa:enable'() {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('not-authorized');\n\t\t}\n\n\t\tconst user = Meteor.user();\n\n\t\tconst secret = RocketChat.TOTP.generateSecret();\n\n\t\tRocketChat.models.Users.disable2FAAndSetTempSecretByUserId(Meteor.userId(), secret.base32);\n\n\t\treturn {\n\t\t\tsecret: secret.base32,\n\t\t\turl: RocketChat.TOTP.generateOtpauthURL(secret, user.username)\n\t\t};\n\t}\n});\n","Meteor.methods({\n\t'2fa:regenerateCodes'(userToken) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('not-authorized');\n\t\t}\n\n\t\tconst user = Meteor.user();\n\n\t\tif (!user.services || !user.services.totp || !user.services.totp.enabled) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\tconst verified = RocketChat.TOTP.verify({\n\t\t\tsecret: user.services.totp.secret,\n\t\t\ttoken: userToken,\n\t\t\tuserId: Meteor.userId(),\n\t\t\tbackupTokens: user.services.totp.hashedBackup\n\t\t});\n\n\t\tif (verified) {\n\t\t\tconst { codes, hashedCodes } = RocketChat.TOTP.generateCodes();\n\n\t\t\tRocketChat.models.Users.update2FABackupCodesByUserId(Meteor.userId(), hashedCodes);\n\t\t\treturn { codes };\n\t\t}\n\t}\n});\n","Meteor.methods({\n\t'2fa:validateTempToken'(userToken) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('not-authorized');\n\t\t}\n\n\t\tconst user = Meteor.user();\n\n\t\tif (!user.services || !user.services.totp || !user.services.totp.tempSecret) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\tconst verified = RocketChat.TOTP.verify({\n\t\t\tsecret: user.services.totp.tempSecret,\n\t\t\ttoken: userToken\n\t\t});\n\n\t\tif (verified) {\n\t\t\tconst { codes, hashedCodes } = RocketChat.TOTP.generateCodes();\n\n\t\t\tRocketChat.models.Users.enable2FAAndSetSecretAndCodesByUserId(Meteor.userId(), user.services.totp.tempSecret, hashedCodes);\n\t\t\treturn { codes };\n\t\t}\n\t}\n});\n","RocketChat.models.Users.disable2FAAndSetTempSecretByUserId = function(userId, tempToken) {\n\treturn this.update({\n\t\t_id: userId\n\t}, {\n\t\t$set: {\n\t\t\t'services.totp': {\n\t\t\t\tenabled: false,\n\t\t\t\ttempSecret: tempToken\n\t\t\t}\n\t\t}\n\t});\n};\n\nRocketChat.models.Users.enable2FAAndSetSecretAndCodesByUserId = function(userId, secret, backupCodes) {\n\treturn this.update({\n\t\t_id: userId\n\t}, {\n\t\t$set: {\n\t\t\t'services.totp.enabled': true,\n\t\t\t'services.totp.secret': secret,\n\t\t\t'services.totp.hashedBackup': backupCodes\n\t\t},\n\t\t$unset: {\n\t\t\t'services.totp.tempSecret': 1\n\t\t}\n\t});\n};\n\nRocketChat.models.Users.disable2FAByUserId = function(userId) {\n\treturn this.update({\n\t\t_id: userId\n\t}, {\n\t\t$set: {\n\t\t\t'services.totp': {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t});\n};\n\nRocketChat.models.Users.update2FABackupCodesByUserId = function(userId, backupCodes) {\n\treturn this.update({\n\t\t_id: userId\n\t}, {\n\t\t$set: {\n\t\t\t'services.totp.hashedBackup': backupCodes\n\t\t}\n\t});\n};\n","Accounts.registerLoginHandler('totp', function(options) {\n\tif (!options.totp || !options.totp.code) {\n\t\treturn;\n\t}\n\n\treturn Accounts._runLoginHandlers(this, options.totp.login);\n});\n\nRocketChat.callbacks.add('onValidateLogin', (login) => {\n\tif (login.type === 'password' && login.user.services && login.user.services.totp && login.user.services.totp.enabled === true) {\n\t\tconst { totp } = login.methodArguments[0];\n\n\t\tif (!totp || !totp.code) {\n\t\t\tthrow new Meteor.Error('totp-required', 'TOTP Required');\n\t\t}\n\n\t\tconst verified = RocketChat.TOTP.verify({\n\t\t\tsecret: login.user.services.totp.secret,\n\t\t\ttoken: totp.code,\n\t\t\tuserId: login.user._id,\n\t\t\tbackupTokens: login.user.services.totp.hashedBackup\n\t\t});\n\n\t\tif (verified !== true) {\n\t\t\tthrow new Meteor.Error('totp-invalid', 'TOTP Invalid');\n\t\t}\n\t}\n});\n"]}