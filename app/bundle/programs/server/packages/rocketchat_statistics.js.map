{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:statistics/lib/rocketchat.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/models/Statistics.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/functions/get.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/functions/save.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/methods/getStatistics.js"],"names":["RocketChat","statistics","models","Statistics","_Base","constructor","tryEnsureIndex","findOneById","_id","options","query","findOne","findLast","sort","createdAt","limit","records","find","fetch","_","module","watch","require","default","v","get","_getStatistics","uniqueId","settings","Settings","installedAt","Info","version","tag","branch","totalUsers","Meteor","users","count","activeUsers","active","nonActiveUsers","onlineUsers","statusConnection","awayUsers","offlineUsers","totalRooms","Rooms","totalChannels","findByType","totalPrivateGroups","totalDirect","totlalLivechat","totalMessages","Messages","totalChannelMessages","reduce","fields","_countChannelMessages","num","room","msgs","totalPrivateGroupMessages","_countPrivateGroupMessages","totalDirectMessages","_countDirectMessages","totalLivechatMessages","_countLivechatMessages","lastLogin","Users","getLastLogin","lastMessageSentAt","getLastTimestamp","lastSeenSubscription","Subscriptions","getLastSeen","os","Npm","type","platform","arch","release","uptime","loadavg","totalmem","freemem","cpus","process","nodeVersion","pid","deploy","method","env","DEPLOY_METHOD","DEPLOY_PLATFORM","migration","Migrations","_getControl","instanceCount","InstanceStatus","getCollection","_updatedAt","$gt","Date","now","MongoInternals","defaultRemoteCollectionDriver","mongo","_oplogHandle","onOplogEntry","oplogEnabled","save","insert","methods","getStatistics","refresh","userId","Error","authz","hasPermission"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAAA,WAAWC,UAAX,GAAwB,EAAxB,C;;;;;;;;;;;ACAAD,WAAWE,MAAX,CAAkBC,UAAlB,GAA+B,IAAI,cAAcH,WAAWE,MAAX,CAAkBE,KAAhC,CAAsC;AACxEC,eAAc;AACb,QAAM,YAAN;AAEA,OAAKC,cAAL,CAAoB;AAAE,gBAAa;AAAf,GAApB;AACA,EALuE,CAOxE;;;AACAC,aAAYC,GAAZ,EAAiBC,OAAjB,EAA0B;AACzB,QAAMC,QAAQ;AAAEF;AAAF,GAAd;AACA,SAAO,KAAKG,OAAL,CAAaD,KAAb,EAAoBD,OAApB,CAAP;AACA;;AAEDG,YAAW;AACV,QAAMH,UAAU;AACfI,SAAM;AACLC,eAAW,CAAC;AADP,IADS;AAIfC,UAAO;AAJQ,GAAhB;AAMA,QAAMC,UAAU,KAAKC,IAAL,CAAU,EAAV,EAAcR,OAAd,EAAuBS,KAAvB,EAAhB;AACA,SAAOF,WAAWA,QAAQ,CAAR,CAAlB;AACA;;AAtBuE,CAA1C,EAA/B,C;;;;;;;;;;;ACAA,IAAIG,CAAJ;;AAAMC,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,SAAQC,CAAR,EAAU;AAACL,MAAEK,CAAF;AAAI;;AAAhB,CAAnC,EAAqD,CAArD;;AAGNxB,WAAWC,UAAX,CAAsBwB,GAAtB,GAA4B,SAASC,cAAT,GAA0B;AACrD,OAAMzB,aAAa,EAAnB,CADqD,CAGrD;;AACAA,YAAW0B,QAAX,GAAsB3B,WAAW4B,QAAX,CAAoBH,GAApB,CAAwB,UAAxB,CAAtB;;AACA,KAAIzB,WAAWE,MAAX,CAAkB2B,QAAlB,CAA2BlB,OAA3B,CAAmC,UAAnC,CAAJ,EAAoD;AACnDV,aAAW6B,WAAX,GAAyB9B,WAAWE,MAAX,CAAkB2B,QAAlB,CAA2BlB,OAA3B,CAAmC,UAAnC,EAA+CG,SAAxE;AACA;;AAED,KAAId,WAAW+B,IAAf,EAAqB;AACpB9B,aAAW+B,OAAX,GAAqBhC,WAAW+B,IAAX,CAAgBC,OAArC;AACA/B,aAAWgC,GAAX,GAAiBjC,WAAW+B,IAAX,CAAgBE,GAAjC;AACAhC,aAAWiC,MAAX,GAAoBlC,WAAW+B,IAAX,CAAgBG,MAApC;AACA,EAboD,CAerD;;;AACAjC,YAAWkC,UAAX,GAAwBC,OAAOC,KAAP,CAAapB,IAAb,GAAoBqB,KAApB,EAAxB;AACArC,YAAWsC,WAAX,GAAyBH,OAAOC,KAAP,CAAapB,IAAb,CAAkB;AAAEuB,UAAQ;AAAV,EAAlB,EAAoCF,KAApC,EAAzB;AACArC,YAAWwC,cAAX,GAA4BxC,WAAWkC,UAAX,GAAwBlC,WAAWsC,WAA/D;AACAtC,YAAWyC,WAAX,GAAyBN,OAAOC,KAAP,CAAapB,IAAb,CAAkB;AAAE0B,oBAAkB;AAApB,EAAlB,EAAkDL,KAAlD,EAAzB;AACArC,YAAW2C,SAAX,GAAuBR,OAAOC,KAAP,CAAapB,IAAb,CAAkB;AAAE0B,oBAAkB;AAApB,EAAlB,EAAgDL,KAAhD,EAAvB;AACArC,YAAW4C,YAAX,GAA0B5C,WAAWkC,UAAX,GAAwBlC,WAAWyC,WAAnC,GAAiDzC,WAAW2C,SAAtF,CArBqD,CAuBrD;;AACA3C,YAAW6C,UAAX,GAAwB9C,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwB9B,IAAxB,GAA+BqB,KAA/B,EAAxB;AACArC,YAAW+C,aAAX,GAA2BhD,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwBE,UAAxB,CAAmC,GAAnC,EAAwCX,KAAxC,EAA3B;AACArC,YAAWiD,kBAAX,GAAgClD,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwBE,UAAxB,CAAmC,GAAnC,EAAwCX,KAAxC,EAAhC;AACArC,YAAWkD,WAAX,GAAyBnD,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwBE,UAAxB,CAAmC,GAAnC,EAAwCX,KAAxC,EAAzB;AACArC,YAAWmD,cAAX,GAA4BpD,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwBE,UAAxB,CAAmC,GAAnC,EAAwCX,KAAxC,EAA5B,CA5BqD,CA8BrD;;AACArC,YAAWoD,aAAX,GAA2BrD,WAAWE,MAAX,CAAkBoD,QAAlB,CAA2BrC,IAA3B,GAAkCqB,KAAlC,EAA3B;AACArC,YAAWsD,oBAAX,GAAkCpC,EAAEqC,MAAF,CAASxD,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwBE,UAAxB,CAAmC,GAAnC,EAAwC;AAAEQ,UAAQ;AAAE,WAAQ;AAAV;AAAV,EAAxC,EAAkEvC,KAAlE,EAAT,EAAoF,SAASwC,qBAAT,CAA+BC,GAA/B,EAAoCC,IAApC,EAA0C;AAAE,SAAOD,MAAMC,KAAKC,IAAlB;AAAyB,EAAzJ,EAA2J,CAA3J,CAAlC;AACA5D,YAAW6D,yBAAX,GAAuC3C,EAAEqC,MAAF,CAASxD,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwBE,UAAxB,CAAmC,GAAnC,EAAwC;AAAEQ,UAAQ;AAAE,WAAQ;AAAV;AAAV,EAAxC,EAAkEvC,KAAlE,EAAT,EAAoF,SAAS6C,0BAAT,CAAoCJ,GAApC,EAAyCC,IAAzC,EAA+C;AAAE,SAAOD,MAAMC,KAAKC,IAAlB;AAAyB,EAA9J,EAAgK,CAAhK,CAAvC;AACA5D,YAAW+D,mBAAX,GAAiC7C,EAAEqC,MAAF,CAASxD,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwBE,UAAxB,CAAmC,GAAnC,EAAwC;AAAEQ,UAAQ;AAAE,WAAQ;AAAV;AAAV,EAAxC,EAAkEvC,KAAlE,EAAT,EAAoF,SAAS+C,oBAAT,CAA8BN,GAA9B,EAAmCC,IAAnC,EAAyC;AAAE,SAAOD,MAAMC,KAAKC,IAAlB;AAAyB,EAAxJ,EAA0J,CAA1J,CAAjC;AACA5D,YAAWiE,qBAAX,GAAmC/C,EAAEqC,MAAF,CAASxD,WAAWE,MAAX,CAAkB6C,KAAlB,CAAwBE,UAAxB,CAAmC,GAAnC,EAAwC;AAAEQ,UAAQ;AAAE,WAAQ;AAAV;AAAV,EAAxC,EAAkEvC,KAAlE,EAAT,EAAoF,SAASiD,sBAAT,CAAgCR,GAAhC,EAAqCC,IAArC,EAA2C;AAAE,SAAOD,MAAMC,KAAKC,IAAlB;AAAyB,EAA1J,EAA4J,CAA5J,CAAnC;AAEA5D,YAAWmE,SAAX,GAAuBpE,WAAWE,MAAX,CAAkBmE,KAAlB,CAAwBC,YAAxB,EAAvB;AACArE,YAAWsE,iBAAX,GAA+BvE,WAAWE,MAAX,CAAkBoD,QAAlB,CAA2BkB,gBAA3B,EAA/B;AACAvE,YAAWwE,oBAAX,GAAkCzE,WAAWE,MAAX,CAAkBwE,aAAlB,CAAgCC,WAAhC,EAAlC;;AAEA,OAAMC,KAAKC,IAAIvD,OAAJ,CAAY,IAAZ,CAAX;;AACArB,YAAW2E,EAAX,GAAgB;AACfE,QAAMF,GAAGE,IAAH,EADS;AAEfC,YAAUH,GAAGG,QAAH,EAFK;AAGfC,QAAMJ,GAAGI,IAAH,EAHS;AAIfC,WAASL,GAAGK,OAAH,EAJM;AAKfC,UAAQN,GAAGM,MAAH,EALO;AAMfC,WAASP,GAAGO,OAAH,EANM;AAOfC,YAAUR,GAAGQ,QAAH,EAPK;AAQfC,WAAST,GAAGS,OAAH,EARM;AASfC,QAAMV,GAAGU,IAAH;AATS,EAAhB;AAYArF,YAAWsF,OAAX,GAAqB;AACpBC,eAAaD,QAAQvD,OADD;AAEpByD,OAAKF,QAAQE,GAFO;AAGpBP,UAAQK,QAAQL,MAAR;AAHY,EAArB;AAMAjF,YAAWyF,MAAX,GAAoB;AACnBC,UAAQJ,QAAQK,GAAR,CAAYC,aAAZ,IAA6B,KADlB;AAEnBd,YAAUQ,QAAQK,GAAR,CAAYE,eAAZ,IAA+B;AAFtB,EAApB;AAKA7F,YAAW8F,SAAX,GAAuB/F,WAAWgG,UAAX,CAAsBC,WAAtB,EAAvB;AACAhG,YAAWiG,aAAX,GAA2BC,eAAeC,aAAf,GAA+BnF,IAA/B,CAAoC;AAAEoF,cAAY;AAAEC,QAAK,IAAIC,IAAJ,CAASA,KAAKC,GAAL,KAAajB,QAAQL,MAAR,KAAmB,IAAhC,GAAuC,IAAhD;AAAP;AAAd,EAApC,EAAmH5C,KAAnH,EAA3B;;AAEA,KAAImE,eAAeC,6BAAf,GAA+CC,KAA/C,CAAqDC,YAArD,IAAqEH,eAAeC,6BAAf,GAA+CC,KAA/C,CAAqDC,YAArD,CAAkEC,YAAvI,IAAuJ7G,WAAW4B,QAAX,CAAoBH,GAApB,CAAwB,+BAAxB,MAA6D,IAAxN,EAA8N;AAC7NxB,aAAW6G,YAAX,GAA0B,IAA1B;AACA;;AAED,QAAO7G,UAAP;AACA,CAzED,C;;;;;;;;;;;ACHAD,WAAWC,UAAX,CAAsB8G,IAAtB,GAA6B,YAAW;AACvC,OAAM9G,aAAaD,WAAWC,UAAX,CAAsBwB,GAAtB,EAAnB;AACAxB,YAAWa,SAAX,GAAuB,IAAIyF,IAAJ,EAAvB;AACAvG,YAAWE,MAAX,CAAkBC,UAAlB,CAA6B6G,MAA7B,CAAoC/G,UAApC;AACA,QAAOA,UAAP;AACA,CALD,C;;;;;;;;;;;ACAAmC,OAAO6E,OAAP,CAAe;AACdC,eAAcC,OAAd,EAAuB;AACtB,MAAI,CAAC/E,OAAOgF,MAAP,EAAL,EAAsB;AACrB,SAAM,IAAIhF,OAAOiF,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAE1B,YAAQ;AAAV,IAAvD,CAAN;AACA;;AAED,MAAI3F,WAAWsH,KAAX,CAAiBC,aAAjB,CAA+BnF,OAAOgF,MAAP,EAA/B,EAAgD,iBAAhD,MAAuE,IAA3E,EAAiF;AAChF,SAAM,IAAIhF,OAAOiF,KAAX,CAAiB,mBAAjB,EAAsC,aAAtC,EAAqD;AAAE1B,YAAQ;AAAV,IAArD,CAAN;AACA;;AAED,MAAIwB,OAAJ,EAAa;AACZ,UAAOnH,WAAWC,UAAX,CAAsB8G,IAAtB,EAAP;AACA,GAFD,MAEO;AACN,UAAO/G,WAAWE,MAAX,CAAkBC,UAAlB,CAA6BS,QAA7B,EAAP;AACA;AACD;;AAfa,CAAf,E","file":"/packages/rocketchat_statistics.js","sourcesContent":["RocketChat.statistics = {};\n","RocketChat.models.Statistics = new class extends RocketChat.models._Base {\n\tconstructor() {\n\t\tsuper('statistics');\n\n\t\tthis.tryEnsureIndex({ 'createdAt': 1 });\n\t}\n\n\t// FIND ONE\n\tfindOneById(_id, options) {\n\t\tconst query = { _id };\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindLast() {\n\t\tconst options = {\n\t\t\tsort: {\n\t\t\t\tcreatedAt: -1\n\t\t\t},\n\t\t\tlimit: 1\n\t\t};\n\t\tconst records = this.find({}, options).fetch();\n\t\treturn records && records[0];\n\t}\n};\n","/* global InstanceStatus, MongoInternals */\nimport _ from 'underscore';\n\nRocketChat.statistics.get = function _getStatistics() {\n\tconst statistics = {};\n\n\t// Version\n\tstatistics.uniqueId = RocketChat.settings.get('uniqueID');\n\tif (RocketChat.models.Settings.findOne('uniqueID')) {\n\t\tstatistics.installedAt = RocketChat.models.Settings.findOne('uniqueID').createdAt;\n\t}\n\n\tif (RocketChat.Info) {\n\t\tstatistics.version = RocketChat.Info.version;\n\t\tstatistics.tag = RocketChat.Info.tag;\n\t\tstatistics.branch = RocketChat.Info.branch;\n\t}\n\n\t// User statistics\n\tstatistics.totalUsers = Meteor.users.find().count();\n\tstatistics.activeUsers = Meteor.users.find({ active: true }).count();\n\tstatistics.nonActiveUsers = statistics.totalUsers - statistics.activeUsers;\n\tstatistics.onlineUsers = Meteor.users.find({ statusConnection: 'online' }).count();\n\tstatistics.awayUsers = Meteor.users.find({ statusConnection: 'away' }).count();\n\tstatistics.offlineUsers = statistics.totalUsers - statistics.onlineUsers - statistics.awayUsers;\n\n\t// Room statistics\n\tstatistics.totalRooms = RocketChat.models.Rooms.find().count();\n\tstatistics.totalChannels = RocketChat.models.Rooms.findByType('c').count();\n\tstatistics.totalPrivateGroups = RocketChat.models.Rooms.findByType('p').count();\n\tstatistics.totalDirect = RocketChat.models.Rooms.findByType('d').count();\n\tstatistics.totlalLivechat = RocketChat.models.Rooms.findByType('l').count();\n\n\t// Message statistics\n\tstatistics.totalMessages = RocketChat.models.Messages.find().count();\n\tstatistics.totalChannelMessages = _.reduce(RocketChat.models.Rooms.findByType('c', { fields: { 'msgs': 1 }}).fetch(), function _countChannelMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalPrivateGroupMessages = _.reduce(RocketChat.models.Rooms.findByType('p', { fields: { 'msgs': 1 }}).fetch(), function _countPrivateGroupMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalDirectMessages = _.reduce(RocketChat.models.Rooms.findByType('d', { fields: { 'msgs': 1 }}).fetch(), function _countDirectMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalLivechatMessages = _.reduce(RocketChat.models.Rooms.findByType('l', { fields: { 'msgs': 1 }}).fetch(), function _countLivechatMessages(num, room) { return num + room.msgs; }, 0);\n\n\tstatistics.lastLogin = RocketChat.models.Users.getLastLogin();\n\tstatistics.lastMessageSentAt = RocketChat.models.Messages.getLastTimestamp();\n\tstatistics.lastSeenSubscription = RocketChat.models.Subscriptions.getLastSeen();\n\n\tconst os = Npm.require('os');\n\tstatistics.os = {\n\t\ttype: os.type(),\n\t\tplatform: os.platform(),\n\t\tarch: os.arch(),\n\t\trelease: os.release(),\n\t\tuptime: os.uptime(),\n\t\tloadavg: os.loadavg(),\n\t\ttotalmem: os.totalmem(),\n\t\tfreemem: os.freemem(),\n\t\tcpus: os.cpus()\n\t};\n\n\tstatistics.process = {\n\t\tnodeVersion: process.version,\n\t\tpid: process.pid,\n\t\tuptime: process.uptime()\n\t};\n\n\tstatistics.deploy = {\n\t\tmethod: process.env.DEPLOY_METHOD || 'tar',\n\t\tplatform: process.env.DEPLOY_PLATFORM || 'selfinstall'\n\t};\n\n\tstatistics.migration = RocketChat.Migrations._getControl();\n\tstatistics.instanceCount = InstanceStatus.getCollection().find({ _updatedAt: { $gt: new Date(Date.now() - process.uptime() * 1000 - 2000) }}).count();\n\n\tif (MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle && MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle.onOplogEntry && RocketChat.settings.get('Force_Disable_OpLog_For_Cache') !== true) {\n\t\tstatistics.oplogEnabled = true;\n\t}\n\n\treturn statistics;\n};\n","RocketChat.statistics.save = function() {\n\tconst statistics = RocketChat.statistics.get();\n\tstatistics.createdAt = new Date;\n\tRocketChat.models.Statistics.insert(statistics);\n\treturn statistics;\n};\n","Meteor.methods({\n\tgetStatistics(refresh) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getStatistics' });\n\t\t}\n\n\t\tif (RocketChat.authz.hasPermission(Meteor.userId(), 'view-statistics') !== true) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'getStatistics' });\n\t\t}\n\n\t\tif (refresh) {\n\t\t\treturn RocketChat.statistics.save();\n\t\t} else {\n\t\t\treturn RocketChat.models.Statistics.findLast();\n\t\t}\n\t}\n});\n"]}