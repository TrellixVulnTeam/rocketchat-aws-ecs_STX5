{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:bot-helpers/server/index.js","meteor://ðŸ’»app/packages/rocketchat:bot-helpers/server/settings.js"],"names":["_","module","watch","require","default","v","BotHelpers","constructor","queries","online","$ne","users","$not","$all","setupCursors","fieldsSetting","userFields","split","forEach","n","trim","_allUsers","RocketChat","models","Users","find","fields","_onlineUsers","$and","request","prop","params","addUserToRole","userName","roleName","Meteor","call","removeUserFromRole","addUserToRoom","room","foundRoom","Rooms","findOneByIdOrName","isObject","Error","data","rid","_id","username","removeUserFromRoom","requestError","method","action","allUsers","Object","keys","length","fetch","onlineUsers","allUsernames","hasOwnProperty","map","user","onlineUsernames","allNames","name","onlineNames","allIDs","onlineIDs","botHelpers","settings","get","settingKey","settingValue","methods","botRequest","args","userID","userId","authz","hasRole","startup","addGroup","add","type","section","i18nLabel","i18nDescription"],"mappings":"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","file":"/packages/rocketchat_bot-helpers.js","sourcesContent":["import _ from 'underscore';\n\n/**\n * BotHelpers helps bots\n * \"private\" properties use meteor collection cursors, so they stay reactive\n * \"public\" properties use getters to fetch and filter collections as array\n */\nclass BotHelpers {\n\tconstructor() {\n\t\tthis.queries = {\n\t\t\tonline: { 'status': { $ne: 'offline' } },\n\t\t\tusers: { 'roles': { $not: { $all: ['bot'] } } }\n\t\t};\n\t}\n\n\t// setup collection cursors with array of fields from setting\n\tsetupCursors(fieldsSetting) {\n\t\tthis.userFields = {};\n\t\tif (typeof fieldsSetting === 'string') {\n\t\t\tfieldsSetting = fieldsSetting.split(',');\n\t\t}\n\t\tfieldsSetting.forEach((n) => {\n\t\t\tthis.userFields[n.trim()] = 1;\n\t\t});\n\t\tthis._allUsers = RocketChat.models.Users.find(this.queries.users, { fields: this.userFields });\n\t\tthis._onlineUsers = RocketChat.models.Users.find({ $and: [this.queries.users, this.queries.online] }, { fields: this.userFields });\n\t}\n\n\t// request methods or props as arguments to Meteor.call\n\trequest(prop, ...params) {\n\t\tif (typeof this[prop] === 'undefined') {\n\t\t\treturn null;\n\t\t} else if (typeof this[prop] === 'function') {\n\t\t\treturn this[prop](...params);\n\t\t} else {\n\t\t\treturn this[prop];\n\t\t}\n\t}\n\n\taddUserToRole(userName, roleName) {\n\t\tMeteor.call('authorization:addUserToRole', roleName, userName);\n\t}\n\n\tremoveUserFromRole(userName, roleName) {\n\t\tMeteor.call('authorization:removeUserFromRole', roleName, userName);\n\t}\n\n\taddUserToRoom(userName, room) {\n\t\tconst foundRoom = RocketChat.models.Rooms.findOneByIdOrName(room);\n\n\t\tif (!_.isObject(foundRoom)) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tconst data = {};\n\t\tdata.rid = foundRoom._id;\n\t\tdata.username = userName;\n\t\tMeteor.call('addUserToRoom', data);\n\t}\n\n\tremoveUserFromRoom(userName, room) {\n\t\tconst foundRoom = RocketChat.models.Rooms.findOneByIdOrName(room);\n\n\t\tif (!_.isObject(foundRoom)) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\t\tconst data = {};\n\t\tdata.rid = foundRoom._id;\n\t\tdata.username = userName;\n\t\tMeteor.call('removeUserFromRoom', data);\n\t}\n\n\t// generic error whenever property access insufficient to fill request\n\trequestError() {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Bot request not allowed', { method: 'botRequest', action: 'bot_request' });\n\t}\n\n\t// \"public\" properties accessed by getters\n\t// allUsers / onlineUsers return whichever properties are enabled by settings\n\tget allUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._allUsers.fetch();\n\t\t}\n\t}\n\tget onlineUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._onlineUsers.fetch();\n\t\t}\n\t}\n\tget allUsernames() {\n\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._allUsers.fetch().map((user) => user.username);\n\t\t}\n\t}\n\tget onlineUsernames() {\n\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._onlineUsers.fetch().map((user) => user.username);\n\t\t}\n\t}\n\tget allNames() {\n\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._allUsers.fetch().map((user) => user.name);\n\t\t}\n\t}\n\tget onlineNames() {\n\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._onlineUsers.fetch().map((user) => user.name);\n\t\t}\n\t}\n\tget allIDs() {\n\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._allUsers.fetch().map((user) => {\n\t\t\t\treturn { 'id': user._id, 'name': user.username };\n\t\t\t});\n\t\t}\n\t}\n\tget onlineIDs() {\n\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._onlineUsers.fetch().map((user) => {\n\t\t\t\treturn { 'id': user._id, 'name': user.username };\n\t\t\t});\n\t\t}\n\t}\n}\n\n// add class to meteor methods\nconst botHelpers = new BotHelpers();\n\n// init cursors with fields setting and update on setting change\nRocketChat.settings.get('BotHelpers_userFields', function(settingKey, settingValue) {\n\tbotHelpers.setupCursors(settingValue);\n});\n\nMeteor.methods({\n\tbotRequest: (...args) => {\n\t\tconst userID = Meteor.userId();\n\t\tif (userID && RocketChat.authz.hasRole(userID, 'bot')) {\n\t\t\treturn botHelpers.request(...args);\n\t\t} else {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'botRequest' });\n\t\t}\n\t}\n});\n","Meteor.startup(function() {\n\tRocketChat.settings.addGroup('Bots', function() {\n\t\tthis.add('BotHelpers_userFields', '_id, name, username, emails, language, utcOffset', {\n\t\t\ttype: 'string',\n\t\t\tsection: 'Helpers',\n\t\t\ti18nLabel: 'BotHelpers_userFields',\n\t\t\ti18nDescription: 'BotHelpers_userFields_Description'\n\t\t});\n\t});\n});\n"]}