{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:ldap/server/index.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/ldap.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/loginHandler.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/sync.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/syncUsers.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/testConnection.js"],"names":["module","watch","require","export","default","LDAP","ldapjs","v","Bunyan","logger","Logger","sections","connection","bind","search","auth","constructor","connected","options","host","RocketChat","settings","get","port","Reconnect","Internal_Log_Level","timeout","connect_timeout","idle_timeout","encryption","ca_cert","reject_unauthorized","Authentication","Authentication_UserDN","Authentication_Password","BaseDN","User_Search_Filter","User_Search_Scope","User_Search_Field","Search_Page_Size","Search_Size_Limit","group_filter_enabled","group_filter_object_class","group_filter_group_id_attribute","group_filter_group_member_attribute","group_filter_group_member_format","group_filter_group_name","connectSync","args","_connectSync","Meteor","wrapAsync","connectAsync","searchAllSync","_searchAllSync","searchAllAsync","callback","info","replied","connectionOptions","url","connectTimeout","idleTimeout","reconnect","log","name","component","stream","process","stderr","level","tlsOptions","rejectUnauthorized","chainLines","split","cert","ca","forEach","line","push","match","join","debug","client","createClient","bindSync","on","error","disconnect","starttls","response","setTimeout","Error","getUserFilter","username","filter","usernameFilter","map","item","length","bindIfNecessary","domainBinded","searchUsersSync","page","searchOptions","scope","sizeLimit","paged","pageSize","pagePause","searchAllPaged","getUserByIdSync","id","attribute","Unique_Identifier_Field","filters","EqualityFilter","value","Buffer","OrFilter","toString","result","Array","isArray","getUserByUsernameSync","isUserInGroup","replace","extractLdapEntryData","entry","values","_raw","raw","Object","keys","key","includes","processPage","entries","title","end","next","_updateIdle","res","internalPageSize","authSync","dn","password","unbind","slug","getLdapUsername","getLdapUserUniqueID","syncUserData","addLdapUser","fallbackDefaultAccountSystem","indexOf","email","loginRequest","user","digest","SHA256","algorithm","Accounts","_runLoginHandlers","registerLoginHandler","ldap","ldapOptions","undefined","ldapPass","self","ldapUser","users","userQuery","findOne","stampedToken","_generateStampedLoginToken","update","_id","$push","_hashStampedToken","setPassword","logout","userId","token","addGroup","enableQuery","enableAuthentication","enableTLSQuery","$in","syncDataQuery","groupFilterQuery","backgroundSyncQuery","add","type","public","i18nLabel","multiline","actionText","section","getPropertyValue","getDataToSyncUserData","importNewUsers","_","text","slugify","obj","reduce","acc","el","err","usernameField","field","concat","find","isEmpty","syncUserDataFieldMap","trim","userData","whitelistedUserFields","fieldMap","JSON","parse","emailList","userField","ldapField","hasOwnProperty","isObject","address","verified","outerKey","innerKeys","customFieldsMeta","e","tmpUserField","tmpLdapField","templateVarHandler","dKeys","lastKey","last","currKey","stringify","emails","uniqueId","services","idAttribute","size","_setRealName","$set","_setUsername","avatar","thumbnailPhoto","jpegPhoto","rs","RocketChatFile","bufferToStream","fileStore","FileUpload","getStore","deleteByName","file","runAsUser","insert","models","Users","setAvatarOrigin","Notifications","notifyLogged","userObject","mail","createUser","count","bindEnvironment","ldapUsers","sync","findLDAPUsers","jobName","addCronJob","debounce","addCronJobDebounced","SyncedCron","nextScheduledAtDate","remove","schedule","parser","job","start","startup","defer","methods","ldap_sync_now","method","authz","hasRole","unblock","message","params","ldap_test_connection","console"],"mappings":"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","file":"/packages/rocketchat_ldap.js","sourcesContent":["import './loginHandler';\nimport './settings';\nimport './testConnection';\nimport './syncUsers';\nimport './sync';\n","import ldapjs from 'ldapjs';\nimport Bunyan from 'bunyan';\n\nconst logger = new Logger('LDAP', {\n\tsections: {\n\t\tconnection: 'Connection',\n\t\tbind: 'Bind',\n\t\tsearch: 'Search',\n\t\tauth: 'Auth'\n\t}\n});\n\nexport default class LDAP {\n\tconstructor() {\n\t\tthis.ldapjs = ldapjs;\n\n\t\tthis.connected = false;\n\n\t\tthis.options = {\n\t\t\thost: RocketChat.settings.get('LDAP_Host'),\n\t\t\tport: RocketChat.settings.get('LDAP_Port'),\n\t\t\tReconnect: RocketChat.settings.get('LDAP_Reconnect'),\n\t\t\tInternal_Log_Level: RocketChat.settings.get('LDAP_Internal_Log_Level'),\n\t\t\ttimeout: RocketChat.settings.get('LDAP_Timeout'),\n\t\t\tconnect_timeout: RocketChat.settings.get('LDAP_Connect_Timeout'),\n\t\t\tidle_timeout: RocketChat.settings.get('LDAP_Idle_Timeout'),\n\t\t\tencryption: RocketChat.settings.get('LDAP_Encryption'),\n\t\t\tca_cert: RocketChat.settings.get('LDAP_CA_Cert'),\n\t\t\treject_unauthorized: RocketChat.settings.get('LDAP_Reject_Unauthorized') || false,\n\t\t\tAuthentication: RocketChat.settings.get('LDAP_Authentication'),\n\t\t\tAuthentication_UserDN: RocketChat.settings.get('LDAP_Authentication_UserDN'),\n\t\t\tAuthentication_Password: RocketChat.settings.get('LDAP_Authentication_Password'),\n\t\t\tBaseDN: RocketChat.settings.get('LDAP_BaseDN'),\n\t\t\tUser_Search_Filter: RocketChat.settings.get('LDAP_User_Search_Filter'),\n\t\t\tUser_Search_Scope: RocketChat.settings.get('LDAP_User_Search_Scope'),\n\t\t\tUser_Search_Field: RocketChat.settings.get('LDAP_User_Search_Field'),\n\t\t\tSearch_Page_Size: RocketChat.settings.get('LDAP_Search_Page_Size'),\n\t\t\tSearch_Size_Limit: RocketChat.settings.get('LDAP_Search_Size_Limit'),\n\t\t\tgroup_filter_enabled: RocketChat.settings.get('LDAP_Group_Filter_Enable'),\n\t\t\tgroup_filter_object_class: RocketChat.settings.get('LDAP_Group_Filter_ObjectClass'),\n\t\t\tgroup_filter_group_id_attribute: RocketChat.settings.get('LDAP_Group_Filter_Group_Id_Attribute'),\n\t\t\tgroup_filter_group_member_attribute: RocketChat.settings.get('LDAP_Group_Filter_Group_Member_Attribute'),\n\t\t\tgroup_filter_group_member_format: RocketChat.settings.get('LDAP_Group_Filter_Group_Member_Format'),\n\t\t\tgroup_filter_group_name: RocketChat.settings.get('LDAP_Group_Filter_Group_Name')\n\t\t};\n\t}\n\n\tconnectSync(...args) {\n\t\tif (!this._connectSync) {\n\t\t\tthis._connectSync = Meteor.wrapAsync(this.connectAsync, this);\n\t\t}\n\t\treturn this._connectSync(...args);\n\t}\n\n\tsearchAllSync(...args) {\n\t\tif (!this._searchAllSync) {\n\t\t\tthis._searchAllSync = Meteor.wrapAsync(this.searchAllAsync, this);\n\t\t}\n\t\treturn this._searchAllSync(...args);\n\t}\n\n\tconnectAsync(callback) {\n\t\tlogger.connection.info('Init setup');\n\n\t\tlet replied = false;\n\n\t\tconst connectionOptions = {\n\t\t\turl: `${ this.options.host }:${ this.options.port }`,\n\t\t\ttimeout: this.options.timeout,\n\t\t\tconnectTimeout: this.options.connect_timeout,\n\t\t\tidleTimeout: this.options.idle_timeout,\n\t\t\treconnect: this.options.Reconnect\n\t\t};\n\n\t\tif (this.options.Internal_Log_Level !== 'disabled') {\n\t\t\tconnectionOptions.log = new Bunyan({\n\t\t\t\tname: 'ldapjs',\n\t\t\t\tcomponent: 'client',\n\t\t\t\tstream: process.stderr,\n\t\t\t\tlevel: this.options.Internal_Log_Level\n\t\t\t});\n\t\t}\n\n\t\tconst tlsOptions = {\n\t\t\trejectUnauthorized: this.options.reject_unauthorized\n\t\t};\n\n\t\tif (this.options.ca_cert && this.options.ca_cert !== '') {\n\t\t\t// Split CA cert into array of strings\n\t\t\tconst chainLines = RocketChat.settings.get('LDAP_CA_Cert').split('\\n');\n\t\t\tlet cert = [];\n\t\t\tconst ca = [];\n\t\t\tchainLines.forEach((line) => {\n\t\t\t\tcert.push(line);\n\t\t\t\tif (line.match(/-END CERTIFICATE-/)) {\n\t\t\t\t\tca.push(cert.join('\\n'));\n\t\t\t\t\tcert = [];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttlsOptions.ca = ca;\n\t\t}\n\n\t\tif (this.options.encryption === 'ssl') {\n\t\t\tconnectionOptions.url = `ldaps://${ connectionOptions.url }`;\n\t\t\tconnectionOptions.tlsOptions = tlsOptions;\n\t\t} else {\n\t\t\tconnectionOptions.url = `ldap://${ connectionOptions.url }`;\n\t\t}\n\n\t\tlogger.connection.info('Connecting', connectionOptions.url);\n\t\tlogger.connection.debug('connectionOptions', connectionOptions);\n\n\t\tthis.client = ldapjs.createClient(connectionOptions);\n\n\t\tthis.bindSync = Meteor.wrapAsync(this.client.bind, this.client);\n\n\t\tthis.client.on('error', (error) => {\n\t\t\tlogger.connection.error('connection', error);\n\t\t\tif (replied === false) {\n\t\t\t\treplied = true;\n\t\t\t\tcallback(error, null);\n\t\t\t}\n\t\t});\n\n\t\tthis.client.on('idle', () => {\n\t\t\tlogger.search.info('Idle');\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tthis.client.on('close', () => {\n\t\t\tlogger.search.info('Closed');\n\t\t});\n\n\t\tif (this.options.encryption === 'tls') {\n\t\t\t// Set host parameter for tls.connect which is used by ldapjs starttls. This shouldn't be needed in newer nodejs versions (e.g v5.6.0).\n\t\t\t// https://github.com/RocketChat/Rocket.Chat/issues/2035\n\t\t\t// https://github.com/mcavage/node-ldapjs/issues/349\n\t\t\ttlsOptions.host = this.options.host;\n\n\t\t\tlogger.connection.info('Starting TLS');\n\t\t\tlogger.connection.debug('tlsOptions', tlsOptions);\n\n\t\t\tthis.client.starttls(tlsOptions, null, (error, response) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tlogger.connection.error('TLS connection', error);\n\t\t\t\t\tif (replied === false) {\n\t\t\t\t\t\treplied = true;\n\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlogger.connection.info('TLS connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.client.on('connect', (response) => {\n\t\t\t\tlogger.connection.info('LDAP connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tif (replied === false) {\n\t\t\t\tlogger.connection.error('connection time out', connectionOptions.connectTimeout);\n\t\t\t\treplied = true;\n\t\t\t\tcallback(new Error('Timeout'));\n\t\t\t}\n\t\t}, connectionOptions.connectTimeout);\n\t}\n\n\tgetUserFilter(username) {\n\t\tconst filter = [];\n\n\t\tif (this.options.User_Search_Filter !== '') {\n\t\t\tif (this.options.User_Search_Filter[0] === '(') {\n\t\t\t\tfilter.push(`${ this.options.User_Search_Filter }`);\n\t\t\t} else {\n\t\t\t\tfilter.push(`(${ this.options.User_Search_Filter })`);\n\t\t\t}\n\t\t}\n\n\t\tconst usernameFilter = this.options.User_Search_Field.split(',').map(item => `(${ item }=${ username })`);\n\n\t\tif (usernameFilter.length === 0) {\n\t\t\tlogger.error('LDAP_LDAP_User_Search_Field not defined');\n\t\t} else if (usernameFilter.length === 1) {\n\t\t\tfilter.push(`${ usernameFilter[0] }`);\n\t\t} else {\n\t\t\tfilter.push(`(|${ usernameFilter.join('') })`);\n\t\t}\n\n\t\treturn `(&${ filter.join('') })`;\n\t}\n\n\tbindIfNecessary() {\n\t\tif (this.domainBinded === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.options.Authentication !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.bind.info('Binding UserDN', this.options.Authentication_UserDN);\n\t\tthis.bindSync(this.options.Authentication_UserDN, this.options.Authentication_Password);\n\t\tthis.domainBinded = true;\n\t}\n\n\tsearchUsersSync(username, page) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: this.getUserFilter(username),\n\t\t\tscope: this.options.User_Search_Scope || 'sub',\n\t\t\tsizeLimit: this.options.Search_Size_Limit\n\t\t};\n\n\t\tif (this.options.Search_Page_Size > 0) {\n\t\t\tsearchOptions.paged = {\n\t\t\t\tpageSize: this.options.Search_Page_Size,\n\t\t\t\tpagePause: !!page\n\t\t\t};\n\t\t}\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tif (page) {\n\t\t\treturn this.searchAllPaged(this.options.BaseDN, searchOptions, page);\n\t\t}\n\n\t\treturn this.searchAllSync(this.options.BaseDN, searchOptions);\n\t}\n\n\tgetUserByIdSync(id, attribute) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field').split(',');\n\n\t\tlet filter;\n\n\t\tif (attribute) {\n\t\t\tfilter = new this.ldapjs.filters.EqualityFilter({\n\t\t\t\tattribute,\n\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t});\n\t\t} else {\n\t\t\tconst filters = [];\n\t\t\tUnique_Identifier_Field.forEach((item) => {\n\t\t\t\tfilters.push(new this.ldapjs.filters.EqualityFilter({\n\t\t\t\t\tattribute: item,\n\t\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t\t}));\n\t\t\t});\n\n\t\t\tfilter = new this.ldapjs.filters.OrFilter({filters});\n\t\t}\n\n\t\tconst searchOptions = {\n\t\t\tfilter,\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching by id', id);\n\t\tlogger.search.debug('search filter', searchOptions.filter.toString());\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by id', id, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tgetUserByUsernameSync(username) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: this.getUserFilter(username),\n\t\t\tscope: this.options.User_Search_Scope || 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by username', username, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tisUserInGroup(username) {\n\t\tif (!this.options.group_filter_enabled) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.group_filter_object_class !== '') {\n\t\t\tfilter.push(`(objectclass=${ this.options.group_filter_object_class })`);\n\t\t}\n\n\t\tif (this.options.group_filter_group_member_attribute !== '') {\n\t\t\tfilter.push(`(${ this.options.group_filter_group_member_attribute }=${ this.options.group_filter_group_member_format })`);\n\t\t}\n\n\t\tif (this.options.group_filter_group_id_attribute !== '') {\n\t\t\tfilter.push(`(${ this.options.group_filter_group_id_attribute }=${ this.options.group_filter_group_name })`);\n\t\t}\n\t\tfilter.push(')');\n\n\t\tconst searchOptions = {\n\t\t\tfilter: filter.join('').replace(/#{username}/g, username),\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.debug('Group filter LDAP:', searchOptions.filter);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\textractLdapEntryData(entry) {\n\t\tconst values = {\n\t\t\t_raw: entry.raw\n\t\t};\n\n\t\tObject.keys(values._raw).forEach((key) => {\n\t\t\tconst value = values._raw[key];\n\n\t\t\tif (!['thumbnailPhoto', 'jpegPhoto'].includes(key)) {\n\t\t\t\tif (value instanceof Buffer) {\n\t\t\t\t\tvalues[key] = value.toString();\n\t\t\t\t} else {\n\t\t\t\t\tvalues[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn values;\n\t}\n\n\tsearchAllPaged(BaseDN, options, page) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst processPage = ({entries, title, end, next}) => {\n\t\t\tlogger.search.info(title);\n\t\t\t// Force LDAP idle to wait the record processing\n\t\t\tthis.client._updateIdle(true);\n\t\t\tpage(null, entries, {end, next: () => {\n\t\t\t\t// Reset idle timer\n\t\t\t\tthis.client._updateIdle();\n\t\t\t\tnext && next();\n\t\t\t}});\n\t\t};\n\n\t\tthis.client.search(BaseDN, options, (error, res) => {\n\t\t\tif (error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tpage(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tpage(error);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tlet entries = [];\n\n\t\t\tconst internalPageSize = options.paged && options.paged.pageSize > 0 ? options.paged.pageSize * 2 : 500;\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\tentries.push(this.extractLdapEntryData(entry));\n\n\t\t\t\tif (entries.length >= internalPageSize) {\n\t\t\t\t\tprocessPage({\n\t\t\t\t\t\tentries,\n\t\t\t\t\t\ttitle: 'Internal Page',\n\t\t\t\t\t\tend: false\n\t\t\t\t\t});\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('page', (result, next) => {\n\t\t\t\tif (!next) {\n\t\t\t\t\tthis.client._updateIdle(true);\n\t\t\t\t\tprocessPage({\n\t\t\t\t\t\tentries,\n\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\tend: true\n\t\t\t\t\t});\n\t\t\t\t} else if (entries.length) {\n\t\t\t\t\tlogger.search.info('Page');\n\t\t\t\t\tprocessPage({\n\t\t\t\t\t\tentries,\n\t\t\t\t\t\ttitle: 'Page',\n\t\t\t\t\t\tend: false,\n\t\t\t\t\t\tnext\n\t\t\t\t\t});\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tif (entries.length) {\n\t\t\t\t\tprocessPage({\n\t\t\t\t\t\tentries,\n\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\tend: true\n\t\t\t\t\t});\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tsearchAllAsync(BaseDN, options, callback) {\n\t\tthis.bindIfNecessary();\n\n\t\tthis.client.search(BaseDN, options, (error, res) => {\n\t\t\tif (error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tconst entries = [];\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\tentries.push(this.extractLdapEntryData(entry));\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tlogger.search.info('Search result count', entries.length);\n\t\t\t\tcallback(null, entries);\n\t\t\t});\n\t\t});\n\t}\n\n\tauthSync(dn, password) {\n\t\tlogger.auth.info('Authenticating', dn);\n\n\t\ttry {\n\t\t\tthis.bindSync(dn, password);\n\t\t\tlogger.auth.info('Authenticated', dn);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tlogger.auth.info('Not authenticated', dn);\n\t\t\tlogger.auth.debug('error', error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.domainBinded = false;\n\t\tlogger.connection.info('Disconecting');\n\t\tthis.client.unbind();\n\t}\n}\n","/* eslint new-cap: [2, {\"capIsNewExceptions\": [\"SHA256\"]}] */\n\nimport {slug, getLdapUsername, getLdapUserUniqueID, syncUserData, addLdapUser} from './sync';\nimport LDAP from './ldap';\n\nconst logger = new Logger('LDAPHandler', {});\n\nfunction fallbackDefaultAccountSystem(bind, username, password) {\n\tif (typeof username === 'string') {\n\t\tif (username.indexOf('@') === -1) {\n\t\t\tusername = {username};\n\t\t} else {\n\t\t\tusername = {email: username};\n\t\t}\n\t}\n\n\tlogger.info('Fallback to default account system', username);\n\n\tconst loginRequest = {\n\t\tuser: username,\n\t\tpassword: {\n\t\t\tdigest: SHA256(password),\n\t\t\talgorithm: 'sha-256'\n\t\t}\n\t};\n\n\treturn Accounts._runLoginHandlers(bind, loginRequest);\n}\n\nAccounts.registerLoginHandler('ldap', function(loginRequest) {\n\tif (!loginRequest.ldap || !loginRequest.ldapOptions) {\n\t\treturn undefined;\n\t}\n\n\tlogger.info('Init LDAP login', loginRequest.username);\n\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn fallbackDefaultAccountSystem(this, loginRequest.username, loginRequest.ldapPass);\n\t}\n\n\tconst self = this;\n\tconst ldap = new LDAP();\n\tlet ldapUser;\n\n\ttry {\n\t\tldap.connectSync();\n\t\tconst users = ldap.searchUsersSync(loginRequest.username);\n\n\t\tif (users.length !== 1) {\n\t\t\tlogger.info('Search returned', users.length, 'record(s) for', loginRequest.username);\n\t\t\tthrow new Error('User not Found');\n\t\t}\n\n\t\tif (ldap.authSync(users[0].dn, loginRequest.ldapPass) === true) {\n\t\t\tif (ldap.isUserInGroup (loginRequest.username)) {\n\t\t\t\tldapUser = users[0];\n\t\t\t} else {\n\t\t\t\tthrow new Error('User not in a valid group');\n\t\t\t}\n\t\t} else {\n\t\t\tlogger.info('Wrong password for', loginRequest.username);\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error);\n\t}\n\n\tif (ldapUser === undefined) {\n\t\tif (RocketChat.settings.get('LDAP_Login_Fallback') === true) {\n\t\t\treturn fallbackDefaultAccountSystem(self, loginRequest.username, loginRequest.ldapPass);\n\t\t}\n\n\t\tthrow new Meteor.Error('LDAP-login-error', `LDAP Authentication failed with provided username [${ loginRequest.username }]`);\n\t}\n\n\t// Look to see if user already exists\n\tlet userQuery;\n\n\tconst Unique_Identifier_Field = getLdapUserUniqueID(ldapUser);\n\tlet user;\n\n\tif (Unique_Identifier_Field) {\n\t\tuserQuery = {\n\t\t\t'services.ldap.id': Unique_Identifier_Field.value\n\t\t};\n\n\t\tlogger.info('Querying user');\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\tlet username;\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tusername = slug(getLdapUsername(ldapUser));\n\t} else {\n\t\tusername = slug(loginRequest.username);\n\t}\n\n\tif (!user) {\n\t\tuserQuery = {\n\t\t\tusername\n\t\t};\n\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\t// Login user if they exist\n\tif (user) {\n\t\tif (user.ldap !== true && RocketChat.settings.get('LDAP_Merge_Existing_Users') !== true) {\n\t\t\tlogger.info('User exists without \"ldap: true\"');\n\t\t\tthrow new Meteor.Error('LDAP-login-error', `LDAP Authentication succeded, but there's already an existing user with provided username [${ username }] in Mongo.`);\n\t\t}\n\n\t\tlogger.info('Logging user');\n\n\t\tconst stampedToken = Accounts._generateStampedLoginToken();\n\n\t\tMeteor.users.update(user._id, {\n\t\t\t$push: {\n\t\t\t\t'services.resume.loginTokens': Accounts._hashStampedToken(stampedToken)\n\t\t\t}\n\t\t});\n\n\t\tsyncUserData(user, ldapUser);\n\n\t\tif (RocketChat.settings.get('LDAP_Login_Fallback') === true) {\n\t\t\tAccounts.setPassword(user._id, loginRequest.ldapPass, {logout: false});\n\t\t}\n\n\t\treturn {\n\t\t\tuserId: user._id,\n\t\t\ttoken: stampedToken.token\n\t\t};\n\t}\n\n\tlogger.info('User does not exist, creating', username);\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') === '') {\n\t\tusername = undefined;\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Login_Fallback') !== true) {\n\t\tloginRequest.ldapPass = undefined;\n\t}\n\n\t// Create new user\n\tconst result = addLdapUser(ldapUser, username, loginRequest.ldapPass);\n\n\tif (result instanceof Error) {\n\t\tthrow result;\n\t}\n\n\treturn result;\n});\n","RocketChat.settings.addGroup('LDAP', function() {\n\tconst enableQuery = {_id: 'LDAP_Enable', value: true};\n\tconst enableAuthentication = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Authentication', value: true}\n\t];\n\tconst enableTLSQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Encryption', value: {$in: ['tls', 'ssl']}}\n\t];\n\tconst syncDataQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Sync_User_Data', value: true}\n\t];\n\tconst groupFilterQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Group_Filter_Enable', value: true}\n\t];\n\tconst backgroundSyncQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Background_Sync', value: true}\n\t];\n\n\tthis.add('LDAP_Enable', false, { type: 'boolean', public: true });\n\tthis.add('LDAP_Login_Fallback', true, { type: 'boolean', enableQuery });\n\tthis.add('LDAP_Host', '', { type: 'string', enableQuery });\n\tthis.add('LDAP_Port', '389', { type: 'string', enableQuery });\n\tthis.add('LDAP_Reconnect', false, { type: 'boolean', enableQuery });\n\tthis.add('LDAP_Encryption', 'plain', { type: 'select', values: [ { key: 'plain', i18nLabel: 'No_Encryption' }, { key: 'tls', i18nLabel: 'StartTLS' }, { key: 'ssl', i18nLabel: 'SSL/LDAPS' } ], enableQuery });\n\tthis.add('LDAP_CA_Cert', '', { type: 'string', multiline: true, enableQuery: enableTLSQuery });\n\tthis.add('LDAP_Reject_Unauthorized', true, { type: 'boolean', enableQuery: enableTLSQuery });\n\tthis.add('LDAP_BaseDN', '', { type: 'string', enableQuery });\n\tthis.add('LDAP_Internal_Log_Level', 'disabled', {\n\t\ttype: 'select',\n\t\tvalues: [\n\t\t\t{ key: 'disabled', i18nLabel: 'Disabled' },\n\t\t\t{ key: 'error', i18nLabel: 'Error' },\n\t\t\t{ key: 'warn', i18nLabel: 'Warn' },\n\t\t\t{ key: 'info', i18nLabel: 'Info' },\n\t\t\t{ key: 'debug', i18nLabel: 'Debug' },\n\t\t\t{ key: 'trace', i18nLabel: 'Trace' }\n\t\t],\n\t\tenableQuery\n\t});\n\tthis.add('LDAP_Test_Connection', 'ldap_test_connection', { type: 'action', actionText: 'Test_Connection' });\n\n\tthis.section('Authentication', function() {\n\t\tthis.add('LDAP_Authentication', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Authentication_UserDN', '', { type: 'string', enableQuery: enableAuthentication });\n\t\tthis.add('LDAP_Authentication_Password', '', { type: 'password', enableQuery: enableAuthentication });\n\t});\n\n\tthis.section('Timeouts', function() {\n\t\tthis.add('LDAP_Timeout', 60000, {type: 'int', enableQuery});\n\t\tthis.add('LDAP_Connect_Timeout', 1000, {type: 'int', enableQuery});\n\t\tthis.add('LDAP_Idle_Timeout', 1000, {type: 'int', enableQuery});\n\t});\n\n\tthis.section('User Search', function() {\n\t\tthis.add('LDAP_User_Search_Filter', '(objectclass=*)', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_User_Search_Scope', 'sub', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_User_Search_Field', 'sAMAccountName', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Search_Page_Size', 250, { type: 'int', enableQuery });\n\t\tthis.add('LDAP_Search_Size_Limit', 1000, { type: 'int', enableQuery });\n\t});\n\n\tthis.section('User Search (Group Validation)', function() {\n\t\tthis.add('LDAP_Group_Filter_Enable', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Group_Filter_ObjectClass', 'groupOfUniqueNames', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Id_Attribute', 'cn', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Member_Attribute', 'uniqueMember', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Member_Format', 'uniqueMember', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Name', 'ROCKET_CHAT', { type: 'string', enableQuery: groupFilterQuery });\n\t});\n\n\tthis.section('Sync / Import', function() {\n\t\tthis.add('LDAP_Username_Field', 'sAMAccountName', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Unique_Identifier_Field', 'objectGUID,ibm-entryUUID,GUID,dominoUNID,nsuniqueId,uidNumber', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Default_Domain', '', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Merge_Existing_Users', false, { type: 'boolean', enableQuery });\n\n\t\tthis.add('LDAP_Sync_User_Data', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Sync_User_Data_FieldMap', '{\"cn\":\"name\", \"mail\":\"email\"}', { type: 'string', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Sync_User_Avatar', true, { type: 'boolean', enableQuery });\n\n\t\tthis.add('LDAP_Background_Sync', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Background_Sync_Interval', 'Every 24 hours', { type: 'string', enableQuery: backgroundSyncQuery });\n\t\tthis.add('LDAP_Background_Sync_Import_New_Users', true, { type: 'boolean', enableQuery: backgroundSyncQuery });\n\t\tthis.add('LDAP_Background_Sync_Keep_Existant_Users_Updated', true, { type: 'boolean', enableQuery: backgroundSyncQuery });\n\n\t\tthis.add('LDAP_Sync_Now', 'ldap_sync_now', { type: 'action', actionText: 'Execute_Synchronization_Now' });\n\t});\n});\n","/* globals slugify, SyncedCron */\n\nimport _ from 'underscore';\nimport LDAP from './ldap';\n\nconst logger = new Logger('LDAPSync', {});\n\nexport function slug(text) {\n\tif (RocketChat.settings.get('UTF8_Names_Slugify') !== true) {\n\t\treturn text;\n\t}\n\ttext = slugify(text, '.');\n\treturn text.replace(/[^0-9a-z-_.]/g, '');\n}\n\n\nexport function getPropertyValue(obj, key) {\n\ttry {\n\t\treturn _.reduce(key.split('.'), (acc, el) => acc[el], obj);\n\t} catch (err) {\n\t\treturn undefined;\n\t}\n}\n\n\nexport function getLdapUsername(ldapUser) {\n\tconst usernameField = RocketChat.settings.get('LDAP_Username_Field');\n\n\tif (usernameField.indexOf('#{') > -1) {\n\t\treturn usernameField.replace(/#{(.+?)}/g, function(match, field) {\n\t\t\treturn ldapUser[field];\n\t\t});\n\t}\n\n\treturn ldapUser[usernameField];\n}\n\n\nexport function getLdapUserUniqueID(ldapUser) {\n\tlet Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field');\n\n\tif (Unique_Identifier_Field !== '') {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tUnique_Identifier_Field = [];\n\t}\n\n\tlet User_Search_Field = RocketChat.settings.get('LDAP_User_Search_Field');\n\n\tif (User_Search_Field !== '') {\n\t\tUser_Search_Field = User_Search_Field.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tUser_Search_Field = [];\n\t}\n\n\tUnique_Identifier_Field = Unique_Identifier_Field.concat(User_Search_Field);\n\n\tif (Unique_Identifier_Field.length > 0) {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.find((field) => {\n\t\t\treturn !_.isEmpty(ldapUser._raw[field]);\n\t\t});\n\t\tif (Unique_Identifier_Field) {\n\t\t\tUnique_Identifier_Field = {\n\t\t\t\tattribute: Unique_Identifier_Field,\n\t\t\t\tvalue: ldapUser._raw[Unique_Identifier_Field].toString('hex')\n\t\t\t};\n\t\t}\n\t\treturn Unique_Identifier_Field;\n\t}\n}\n\nexport function getDataToSyncUserData(ldapUser, user) {\n\tconst syncUserData = RocketChat.settings.get('LDAP_Sync_User_Data');\n\tconst syncUserDataFieldMap = RocketChat.settings.get('LDAP_Sync_User_Data_FieldMap').trim();\n\n\tconst userData = {};\n\n\tif (syncUserData && syncUserDataFieldMap) {\n\t\tconst whitelistedUserFields = ['email', 'name', 'customFields'];\n\t\tconst fieldMap = JSON.parse(syncUserDataFieldMap);\n\t\tconst emailList = [];\n\t\t_.map(fieldMap, function(userField, ldapField) {\n\t\t\tswitch (userField) {\n\t\t\t\tcase 'email':\n\t\t\t\t\tif (!ldapUser.hasOwnProperty(ldapField)) {\n\t\t\t\t\t\tlogger.debug(`user does not have attribute: ${ ldapField }`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_.isObject(ldapUser[ldapField])) {\n\t\t\t\t\t\t_.map(ldapUser[ldapField], function(item) {\n\t\t\t\t\t\t\temailList.push({ address: item, verified: true });\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\temailList.push({ address: ldapUser[ldapField], verified: true });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconst [outerKey, innerKeys] = userField.split(/\\.(.+)/);\n\n\t\t\t\t\tif (!_.find(whitelistedUserFields, (el) => el === outerKey)) {\n\t\t\t\t\t\tlogger.debug(`user attribute not whitelisted: ${ userField }`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (outerKey === 'customFields') {\n\t\t\t\t\t\tlet customFieldsMeta;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcustomFieldsMeta = JSON.parse(RocketChat.settings.get('Accounts_CustomFields'));\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlogger.debug('Invalid JSON for Custom Fields');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!getPropertyValue(customFieldsMeta, innerKeys)) {\n\t\t\t\t\t\t\tlogger.debug(`user attribute does not exist: ${ userField }`);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tmpUserField = getPropertyValue(user, userField);\n\t\t\t\t\tconst tmpLdapField = RocketChat.templateVarHandler(ldapField, ldapUser);\n\n\t\t\t\t\tif (tmpLdapField && tmpUserField !== tmpLdapField) {\n\t\t\t\t\t\t// creates the object structure instead of just assigning 'tmpLdapField' to\n\t\t\t\t\t\t// 'userData[userField]' in order to avoid the \"cannot use the part (...)\n\t\t\t\t\t\t// to traverse the element\" (MongoDB) error that can happen. Do not handle\n\t\t\t\t\t\t// arrays.\n\t\t\t\t\t\t// TODO: Find a better solution.\n\t\t\t\t\t\tconst dKeys = userField.split('.');\n\t\t\t\t\t\tconst lastKey = _.last(dKeys);\n\t\t\t\t\t\t_.reduce(dKeys, (obj, currKey) =>\n\t\t\t\t\t\t\t(currKey === lastKey)\n\t\t\t\t\t\t\t\t? obj[currKey] = tmpLdapField\n\t\t\t\t\t\t\t\t: obj[currKey] = obj[currKey] || {}\n\t\t\t\t\t\t\t, userData);\n\t\t\t\t\t\tlogger.debug(`user.${ userField } changed to: ${ tmpLdapField }`);\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (emailList.length > 0) {\n\t\t\tif (JSON.stringify(user.emails) !== JSON.stringify(emailList)) {\n\t\t\t\tuserData.emails = emailList;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\n\tif (uniqueId && (!user.services || !user.services.ldap || user.services.ldap.id !== uniqueId.value || user.services.ldap.idAttribute !== uniqueId.attribute)) {\n\t\tuserData['services.ldap.id'] = uniqueId.value;\n\t\tuserData['services.ldap.idAttribute'] = uniqueId.attribute;\n\t}\n\n\tif (user.ldap !== true) {\n\t\tuserData.ldap = true;\n\t}\n\n\tif (_.size(userData)) {\n\t\treturn userData;\n\t}\n}\n\n\nexport function syncUserData(user, ldapUser) {\n\tlogger.info('Syncing user data');\n\tlogger.debug('user', {'email': user.email, '_id': user._id});\n\tlogger.debug('ldapUser', ldapUser);\n\n\tconst userData = getDataToSyncUserData(ldapUser, user);\n\tif (user && user._id && userData) {\n\t\tlogger.debug('setting', JSON.stringify(userData, null, 2));\n\t\tif (userData.name) {\n\t\t\tRocketChat._setRealName(user._id, userData.name);\n\t\t\tdelete userData.name;\n\t\t}\n\t\tMeteor.users.update(user._id, { $set: userData });\n\t\tuser = Meteor.users.findOne({_id: user._id});\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tconst username = slug(getLdapUsername(ldapUser));\n\t\tif (user && user._id && username !== user.username) {\n\t\t\tlogger.info('Syncing user username', user.username, '->', username);\n\t\t\tRocketChat._setUsername(user._id, username);\n\t\t}\n\t}\n\n\tif (user && user._id && RocketChat.settings.get('LDAP_Sync_User_Avatar') === true) {\n\t\tconst avatar = ldapUser._raw.thumbnailPhoto || ldapUser._raw.jpegPhoto;\n\t\tif (avatar) {\n\t\t\tlogger.info('Syncing user avatar');\n\n\t\t\tconst rs = RocketChatFile.bufferToStream(avatar);\n\t\t\tconst fileStore = FileUpload.getStore('Avatars');\n\t\t\tfileStore.deleteByName(user.username);\n\n\t\t\tconst file = {\n\t\t\t\tuserId: user._id,\n\t\t\t\ttype: 'image/jpeg'\n\t\t\t};\n\n\t\t\tMeteor.runAsUser(user._id, () => {\n\t\t\t\tfileStore.insert(file, rs, () => {\n\t\t\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t\t\tRocketChat.models.Users.setAvatarOrigin(user._id, 'ldap');\n\t\t\t\t\t\tRocketChat.Notifications.notifyLogged('updateAvatar', {username: user.username});\n\t\t\t\t\t}, 500);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function addLdapUser(ldapUser, username, password) {\n\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\n\tconst userObject = {};\n\n\tif (username) {\n\t\tuserObject.username = username;\n\t}\n\n\tconst userData = getDataToSyncUserData(ldapUser, {});\n\n\tif (userData && userData.emails && userData.emails[0] && userData.emails[0].address) {\n\t\tif (Array.isArray(userData.emails[0].address)) {\n\t\t\tuserObject.email = userData.emails[0].address[0];\n\t\t} else {\n\t\t\tuserObject.email = userData.emails[0].address;\n\t\t}\n\t} else if (ldapUser.mail && ldapUser.mail.indexOf('@') > -1) {\n\t\tuserObject.email = ldapUser.mail;\n\t} else if (RocketChat.settings.get('LDAP_Default_Domain') !== '') {\n\t\tuserObject.email = `${ username || uniqueId.value }@${ RocketChat.settings.get('LDAP_Default_Domain') }`;\n\t} else {\n\t\tconst error = new Meteor.Error('LDAP-login-error', 'LDAP Authentication succeded, there is no email to create an account. Have you tried setting your Default Domain in LDAP Settings?');\n\t\tlogger.error(error);\n\t\tthrow error;\n\t}\n\n\tlogger.debug('New user data', userObject);\n\n\tif (password) {\n\t\tuserObject.password = password;\n\t}\n\n\ttry {\n\t\tuserObject._id = Accounts.createUser(userObject);\n\t} catch (error) {\n\t\tlogger.error('Error creating user', error);\n\t\treturn error;\n\t}\n\n\tsyncUserData(userObject, ldapUser);\n\n\treturn {\n\t\tuserId: userObject._id\n\t};\n}\n\nexport function importNewUsers(ldap) {\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\tlogger.error('Can\\'t run LDAP Import, LDAP is disabled');\n\t\treturn;\n\t}\n\n\tif (!ldap) {\n\t\tldap = new LDAP();\n\t\tldap.connectSync();\n\t}\n\n\tlet count = 0;\n\tldap.searchUsersSync('*', Meteor.bindEnvironment((error, ldapUsers, {next, end} = {}) => {\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tldapUsers.forEach((ldapUser) => {\n\t\t\tcount++;\n\n\t\t\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\t\t\t// Look to see if user already exists\n\t\t\tconst userQuery = {\n\t\t\t\t'services.ldap.id': uniqueId.value\n\t\t\t};\n\n\t\t\tlogger.debug('userQuery', userQuery);\n\n\t\t\tlet username;\n\t\t\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\t\t\tusername = slug(getLdapUsername(ldapUser));\n\t\t\t}\n\n\t\t\t// Add user if it was not added before\n\t\t\tlet user = Meteor.users.findOne(userQuery);\n\n\t\t\tif (!user && username && RocketChat.settings.get('LDAP_Merge_Existing_Users') === true) {\n\t\t\t\tconst userQuery = {\n\t\t\t\t\tusername\n\t\t\t\t};\n\n\t\t\t\tlogger.debug('userQuery merge', userQuery);\n\n\t\t\t\tuser = Meteor.users.findOne(userQuery);\n\t\t\t\tif (user) {\n\t\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!user) {\n\t\t\t\taddLdapUser(ldapUser, username);\n\t\t\t}\n\n\t\t\tif (count % 100 === 0) {\n\t\t\t\tlogger.info('Import running. Users imported until now:', count);\n\t\t\t}\n\t\t});\n\n\t\tif (end) {\n\t\t\tlogger.info('Import finished. Users imported:', count);\n\t\t}\n\n\t\tnext(count);\n\t}));\n}\n\nfunction sync() {\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn;\n\t}\n\n\tconst ldap = new LDAP();\n\n\ttry {\n\t\tldap.connectSync();\n\n\t\tlet users;\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated') === true) {\n\t\t\tusers = RocketChat.models.Users.findLDAPUsers();\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Import_New_Users') === true) {\n\t\t\timportNewUsers(ldap);\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated') === true) {\n\t\t\tusers.forEach(function(user) {\n\t\t\t\tlet ldapUser;\n\n\t\t\t\tif (user.services && user.services.ldap && user.services.ldap.id) {\n\t\t\t\t\tldapUser = ldap.getUserByIdSync(user.services.ldap.id, user.services.ldap.idAttribute);\n\t\t\t\t} else {\n\t\t\t\t\tldapUser = ldap.getUserByUsernameSync(user.username);\n\t\t\t\t}\n\n\t\t\t\tif (ldapUser) {\n\t\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info('Can\\'t sync user', user.username);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error);\n\t\treturn error;\n\t}\n\treturn true;\n}\n\nconst jobName = 'LDAP_Sync';\n\nconst addCronJob = _.debounce(Meteor.bindEnvironment(function addCronJobDebounced() {\n\tif (RocketChat.settings.get('LDAP_Background_Sync') !== true) {\n\t\tlogger.info('Disabling LDAP Background Sync');\n\t\tif (SyncedCron.nextScheduledAtDate(jobName)) {\n\t\t\tSyncedCron.remove(jobName);\n\t\t}\n\t\treturn;\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Background_Sync_Interval')) {\n\t\tlogger.info('Enabling LDAP Background Sync');\n\t\tSyncedCron.add({\n\t\t\tname: jobName,\n\t\t\tschedule: (parser) => parser.text(RocketChat.settings.get('LDAP_Background_Sync_Interval')),\n\t\t\tjob() {\n\t\t\t\tsync();\n\t\t\t}\n\t\t});\n\t\tSyncedCron.start();\n\t}\n}), 500);\n\nMeteor.startup(() => {\n\tMeteor.defer(() => {\n\t\tRocketChat.settings.get('LDAP_Background_Sync', addCronJob);\n\t\tRocketChat.settings.get('LDAP_Background_Sync_Interval', addCronJob);\n\t});\n});\n","import {importNewUsers} from './sync';\n\nMeteor.methods({\n\tldap_sync_now() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tthis.unblock();\n\n\t\timportNewUsers();\n\n\t\treturn {\n\t\t\tmessage: 'Sync_in_progress',\n\t\t\tparams: []\n\t\t};\n\t}\n});\n","import LDAP from './ldap';\n\nMeteor.methods({\n\tldap_test_connection() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tlet ldap;\n\t\ttry {\n\t\t\tldap = new LDAP();\n\t\t\tldap.connectSync();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.message);\n\t\t}\n\n\t\ttry {\n\t\t\tldap.bindIfNecessary();\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error(error.name || error.message);\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: 'Connection_success',\n\t\t\tparams: []\n\t\t};\n\t}\n});\n"]}