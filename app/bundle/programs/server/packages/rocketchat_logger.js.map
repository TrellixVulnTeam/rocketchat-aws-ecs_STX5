{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:logger/server/server.js"],"names":["module","export","SystemLogger","StdOut","LoggerManager","processString","Logger","_","watch","require","default","v","s","EventEmitter","constructor","enabled","loggers","queue","showPackage","showFileAndLine","logLevel","register","logger","name","emit","addToQueue","args","push","dispatchQueue","each","item","_log","apply","clearQueue","disable","enable","defaultTypes","debug","color","level","log","info","success","warn","error","_Logger","config","self","Object","assign","typeConfig","type","call","section","__section","method","box","methods","sections","getPrefix","options","prefix","details","_getCallerDetails","detailParts","file","line","length","join","getStack","stack","Error","lines","split","splice","index","len","match","exec","slice","packageMatch","makeABox","message","title","isArray","Math","max","map","topLine","pad","separator","lrpad","rpad","arguments","isString","undefined","subPrefix","console","forEach","unshift","global","string","date","obj","EJSON","parse","time","Log","format","startup","write","process","stdout","Date","id","Random","ts","RocketChat","limit","settings","get","shift","Meteor","publish","userId","authz","hasPermission","ready","added","on"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,eAAa,MAAIA,YAAlB;AAA+BC,SAAO,MAAIA,MAA1C;AAAiDC,gBAAc,MAAIA,aAAnE;AAAiFC,gBAAc,MAAIA,aAAnG;AAAiHC,SAAO,MAAIA;AAA5H,CAAd;;AAAmJ,IAAIC,CAAJ;;AAAMP,OAAOQ,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,SAAQC,CAAR,EAAU;AAACJ,MAAEI,CAAF;AAAI;;AAAhB,CAAnC,EAAqD,CAArD;AAAwD,IAAIC,CAAJ;AAAMZ,OAAOQ,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACC,SAAQC,CAAR,EAAU;AAACC,MAAED,CAAF;AAAI;;AAAhB,CAA1C,EAA4D,CAA5D;AAIvN;AACA,kCAAgB,IAAI,cAAcE,YAAd,CAA2B;AAAE;AAChDC,eAAc;AACb;AACA,OAAKC,OAAL,GAAe,KAAf;AACA,OAAKC,OAAL,GAAe,EAAf;AACA,OAAKC,KAAL,GAAa,EAAb;AACA,OAAKC,WAAL,GAAmB,KAAnB;AACA,OAAKC,eAAL,GAAuB,KAAvB;AACA,OAAKC,QAAL,GAAgB,CAAhB;AACA;;AACDC,UAASC,MAAT,EAAiB;AAChB,MAAI,CAACA,MAAD,YAAmBhB,MAAvB,EAA+B;AAC9B;AACA;;AACD,OAAKU,OAAL,CAAaM,OAAOC,IAApB,IAA4BD,MAA5B;AACA,OAAKE,IAAL,CAAU,UAAV,EAAsBF,MAAtB;AACA;;AACDG,YAAWH,MAAX,EAAmBI,IAAnB,EAAyB;AACxB,OAAKT,KAAL,CAAWU,IAAX,CAAgB;AACfL,SADe;AACPI;AADO,GAAhB;AAGA;;AACDE,iBAAgB;AACfrB,IAAEsB,IAAF,CAAO,KAAKZ,KAAZ,EAAoBa,IAAD,IAAUA,KAAKR,MAAL,CAAYS,IAAZ,CAAiBC,KAAjB,CAAuBF,KAAKR,MAA5B,EAAoCQ,KAAKJ,IAAzC,CAA7B;;AACA,OAAKO,UAAL;AACA;;AACDA,cAAa;AACZ,OAAKhB,KAAL,GAAa,EAAb;AACA;;AAEDiB,WAAU;AACT,OAAKnB,OAAL,GAAe,KAAf;AACA;;AAEDoB,QAAOP,gBAAgB,KAAvB,EAA8B;AAC7B,OAAKb,OAAL,GAAe,IAAf;AACA,SAAQa,kBAAkB,IAAnB,GAA2B,KAAKA,aAAL,EAA3B,GAAkD,KAAKK,UAAL,EAAzD;AACA;;AArC6C,CAA/B,EAAhB;AA0CA,MAAMG,eAAe;AACpBC,QAAO;AACNd,QAAM,OADA;AAENe,SAAO,MAFD;AAGNC,SAAO;AAHD,EADa;AAMpBC,MAAK;AACJjB,QAAM,MADF;AAEJe,SAAO,MAFH;AAGJC,SAAO;AAHH,EANe;AAWpBE,OAAM;AACLlB,QAAM,MADD;AAELe,SAAO,MAFF;AAGLC,SAAO;AAHF,EAXc;AAgBpBG,UAAS;AACRnB,QAAM,MADE;AAERe,SAAO,OAFC;AAGRC,SAAO;AAHC,EAhBW;AAqBpBI,OAAM;AACLpB,QAAM,MADD;AAELe,SAAO,SAFF;AAGLC,SAAO;AAHF,EArBc;AA0BpBK,QAAO;AACNrB,QAAM,OADA;AAENe,SAAO,KAFD;AAGNC,SAAO;AAHD;AA1Ba,CAArB;;AAiCA,MAAMM,OAAN,CAAc;AACb/B,aAAYS,IAAZ,EAAkBuB,SAAS,EAA3B,EAA+B;AAC9B,QAAMC,OAAO,IAAb;AACA,OAAKxB,IAAL,GAAYA,IAAZ;AAEA,OAAKuB,MAAL,GAAcE,OAAOC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAAd;;AACA,MAAI1C,cAAcY,OAAd,IAAyBZ,cAAcY,OAAd,CAAsB,KAAKO,IAA3B,KAAoC,IAAjE,EAAuE;AACtEnB,iBAAcY,OAAd,CAAsB,KAAKO,IAA3B,EAAiCoB,IAAjC,CAAsC,qBAAtC;AACA,UAAOvC,cAAcY,OAAd,CAAsB,KAAKO,IAA3B,CAAP;AACA;;AACDhB,IAAEsB,IAAF,CAAOO,YAAP,EAAqB,CAACc,UAAD,EAAaC,IAAb,KAAsB;AAC1C,QAAKA,IAAL,IAAa,UAAS,GAAGzB,IAAZ,EAAkB;AAC9B,WAAOqB,KAAKhB,IAAL,CAAUqB,IAAV,CAAeL,IAAf,EAAqB;AAC3BM,cAAS,KAAKC,SADa;AAE3BH,SAF2B;AAG3BZ,YAAOW,WAAWX,KAHS;AAI3BgB,aAAQL,WAAW3B,IAJQ;AAK3B,kBAAaG;AALc,KAArB,CAAP;AAOA,IARD;;AAUAqB,QAAM,GAAGI,IAAM,MAAf,IAAwB,UAAS,GAAGzB,IAAZ,EAAkB;AACzC,WAAOqB,KAAKhB,IAAL,CAAUqB,IAAV,CAAeL,IAAf,EAAqB;AAC3BM,cAAS,KAAKC,SADa;AAE3BH,SAF2B;AAG3BK,UAAK,IAHsB;AAI3BjB,YAAOW,WAAWX,KAJS;AAK3BgB,aAAQL,WAAW3B,IALQ;AAM3B,kBAAaG;AANc,KAArB,CAAP;AAQA,IATD;AAUA,GArBD;;AAsBA,MAAI,KAAKoB,MAAL,CAAYW,OAAhB,EAAyB;AACxBlD,KAAEsB,IAAF,CAAO,KAAKiB,MAAL,CAAYW,OAAnB,EAA4B,CAACP,UAAD,EAAaK,MAAb,KAAwB;AACnD,QAAI,KAAKA,MAAL,KAAgB,IAApB,EAA0B;AACzBR,UAAKJ,IAAL,CAAW,UAAUY,MAAQ,iBAA7B;AACA;;AACD,QAAInB,aAAac,WAAWC,IAAxB,KAAiC,IAArC,EAA2C;AAC1CJ,UAAKJ,IAAL,CAAW,eAAeO,WAAWC,IAAM,iBAA3C;AACA;;AACD,SAAKI,MAAL,IAAe,UAAS,GAAG7B,IAAZ,EAAkB;AAChC,YAAOqB,KAAKhB,IAAL,CAAUqB,IAAV,CAAeL,IAAf,EAAqB;AAC3BM,eAAS,KAAKC,SADa;AAE3BH,YAAMD,WAAWC,IAFU;AAG3BZ,aAAOW,WAAWX,KAAX,IAAoB,IAApB,GAA2BW,WAAWX,KAAtC,GAA8CH,aAAac,WAAWC,IAAxB,KAAiCf,aAAac,WAAWC,IAAxB,EAA8BZ,KAHzF;AAI3BgB,YAJ2B;AAK3B,mBAAa7B;AALc,MAArB,CAAP;AAOA,KARD;;AASA,SAAM,GAAG6B,MAAQ,MAAjB,IAA0B,UAAS,GAAG7B,IAAZ,EAAkB;AAC3C,YAAOqB,KAAKhB,IAAL,CAAUqB,IAAV,CAAeL,IAAf,EAAqB;AAC3BM,eAAS,KAAKC,SADa;AAE3BH,YAAMD,WAAWC,IAFU;AAG3BK,WAAK,IAHsB;AAI3BjB,aAAOW,WAAWX,KAAX,IAAoB,IAApB,GAA2BW,WAAWX,KAAtC,GAA8CH,aAAac,WAAWC,IAAxB,KAAiCf,aAAac,WAAWC,IAAxB,EAA8BZ,KAJzF;AAK3BgB,YAL2B;AAM3B,mBAAa7B;AANc,MAArB,CAAP;AAQA,KATD;AAUA,IA1BD;AA2BA;;AACD,MAAI,KAAKoB,MAAL,CAAYY,QAAhB,EAA0B;AACzBnD,KAAEsB,IAAF,CAAO,KAAKiB,MAAL,CAAYY,QAAnB,EAA6B,CAACnC,IAAD,EAAO8B,OAAP,KAAmB;AAC/C,SAAKA,OAAL,IAAgB,EAAhB;;AACA9C,MAAEsB,IAAF,CAAOO,YAAP,EAAqB,CAACc,UAAD,EAAaC,IAAb,KAAsB;AAC1CJ,UAAKM,OAAL,EAAcF,IAAd,IAAsB,CAAC,GAAGzB,IAAJ,KAAa,KAAKyB,IAAL,EAAWnB,KAAX,CAAiB;AAACsB,iBAAW/B;AAAZ,MAAjB,EAAoCG,IAApC,CAAnC;;AACAqB,UAAKM,OAAL,EAAe,GAAGF,IAAM,MAAxB,IAAiC,CAAC,GAAGzB,IAAJ,KAAa,KAAM,GAAGyB,IAAM,MAAf,EAAsBnB,KAAtB,CAA4B;AAACsB,iBAAW/B;AAAZ,MAA5B,EAA+CG,IAA/C,CAA9C;AACA,KAHD;;AAIAnB,MAAEsB,IAAF,CAAO,KAAKiB,MAAL,CAAYW,OAAnB,EAA4B,CAACP,UAAD,EAAaK,MAAb,KAAwB;AACnDR,UAAKM,OAAL,EAAcE,MAAd,IAAwB,CAAC,GAAG7B,IAAJ,KAAaqB,KAAKQ,MAAL,EAAavB,KAAb,CAAmB;AAACsB,iBAAW/B;AAAZ,MAAnB,EAAsCG,IAAtC,CAArC;;AACAqB,UAAKM,OAAL,EAAe,GAAGE,MAAQ,MAA1B,IAAmC,CAAC,GAAG7B,IAAJ,KAAaqB,KAAM,GAAGQ,MAAQ,MAAjB,EAAwBvB,KAAxB,CAA8B;AAACsB,iBAAW/B;AAAZ,MAA9B,EAAiDG,IAAjD,CAAhD;AACA,KAHD;AAIA,IAVD;AAWA;;AAEDtB,gBAAciB,QAAd,CAAuB,IAAvB;AACA;;AACDsC,WAAUC,OAAV,EAAmB;AAClB,MAAIC,SAAU,GAAG,KAAKtC,IAAM,MAAMqC,QAAQL,MAAQ,EAAlD;;AACA,MAAIK,QAAQP,OAAZ,EAAqB;AACpBQ,YAAU,GAAG,KAAKtC,IAAM,MAAMqC,QAAQP,OAAS,IAAIO,QAAQL,MAAQ,EAAnE;AACA;;AACD,QAAMO,UAAU,KAAKC,iBAAL,EAAhB;;AACA,QAAMC,cAAc,EAApB;;AACA,MAAIF,QAAQ,SAAR,MAAuB1D,cAAcc,WAAd,KAA8B,IAA9B,IAAsC0C,QAAQT,IAAR,KAAiB,OAA9E,CAAJ,EAA4F;AAC3Fa,eAAYrC,IAAZ,CAAiBmC,QAAQ,SAAR,CAAjB;AACA;;AACD,MAAI1D,cAAce,eAAd,KAAkC,IAAlC,IAA0CyC,QAAQT,IAAR,KAAiB,OAA/D,EAAwE;AACvE,OAAKW,QAAQG,IAAR,IAAgB,IAAjB,IAA2BH,QAAQI,IAAR,IAAgB,IAA/C,EAAsD;AACrDF,gBAAYrC,IAAZ,CAAkB,GAAGmC,QAAQG,IAAM,IAAIH,QAAQI,IAAM,EAArD;AACA,IAFD,MAEO;AACN,QAAIJ,QAAQG,IAAR,IAAgB,IAApB,EAA0B;AACzBD,iBAAYrC,IAAZ,CAAiBmC,QAAQG,IAAzB;AACA;;AACD,QAAIH,QAAQI,IAAR,IAAgB,IAApB,EAA0B;AACzBF,iBAAYrC,IAAZ,CAAiBmC,QAAQI,IAAzB;AACA;AACD;AACD;;AACD,MAAI9B,aAAawB,QAAQT,IAArB,CAAJ,EAAgC;AAC/B;AACAU,YAASA,OAAOzB,aAAawB,QAAQT,IAArB,EAA2Bb,KAAlC,CAAT;AACA;;AACD,MAAI0B,YAAYG,MAAZ,GAAqB,CAAzB,EAA4B;AAC3BN,YAAU,GAAGG,YAAYI,IAAZ,CAAiB,GAAjB,CAAuB,IAAIP,MAAQ,EAAhD;AACA;;AACD,SAAOA,MAAP;AACA;;AACDE,qBAAoB;AACnB,QAAMM,WAAW,MAAM;AACtB;AACA;AACA;AACA,SAAM;AAACC;AAAD,OAAU,IAAIC,KAAJ,EAAhB;AACA,UAAOD,KAAP;AACA,GAND;;AAOA,QAAMA,QAAQD,UAAd;;AACA,MAAI,CAACC,KAAL,EAAY;AACX,UAAO,EAAP;AACA;;AACD,QAAME,QAAQF,MAAMG,KAAN,CAAY,IAAZ,EAAkBC,MAAlB,CAAyB,CAAzB,CAAd,CAZmB,CAanB;AACA;;AACA,MAAIR,OAAOM,MAAM,CAAN,CAAX;;AACA,OAAK,IAAIG,QAAQ,CAAZ,EAAeC,MAAMJ,MAAML,MAAhC,EAAwCQ,QAAQC,GAAR,EAAaD,OAArD,EAA8DT,OAAOM,MAAMG,KAAN,CAArE,EAAmF;AAClF,OAAIT,KAAKW,KAAL,CAAW,oBAAX,CAAJ,EAAsC;AACrC,WAAO;AAACZ,WAAM;AAAP,KAAP;AACA;;AAED,OAAI,CAACC,KAAKW,KAAL,CAAW,wCAAX,CAAL,EAA2D;AAC1D;AACA;AACD;;AAED,QAAMf,UAAU,EAAhB,CA1BmB,CA2BnB;AACA;AACA;;AACA,QAAMe,QAAQ,0CAA0CC,IAA1C,CAA+CZ,IAA/C,CAAd;;AACA,MAAI,CAACW,KAAL,EAAY;AACX,UAAOf,OAAP;AACA;;AACDA,UAAQI,IAAR,GAAeW,MAAM,CAAN,EAASJ,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAf,CAlCmB,CAmCnB;AACA;AACA;;AACAX,UAAQG,IAAR,GAAeY,MAAM,CAAN,EAASJ,KAAT,CAAe,GAAf,EAAoBM,KAApB,CAA0B,CAAC,CAA3B,EAA8B,CAA9B,EAAiCN,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAf;AACA,QAAMO,eAAeH,MAAM,CAAN,EAASA,KAAT,CAAe,+BAAf,CAArB;;AACA,MAAIG,YAAJ,EAAkB;AACjBlB,WAAQ,SAAR,IAAqBkB,aAAa,CAAb,CAArB;AACA;;AACD,SAAOlB,OAAP;AACA;;AACDmB,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AACxB,MAAI,CAAC5E,EAAE6E,OAAF,CAAUF,OAAV,CAAL,EAAyB;AACxBA,aAAUA,QAAQT,KAAR,CAAc,IAAd,CAAV;AACA;;AACD,MAAIG,MAAM,CAAV;AAEAA,QAAMS,KAAKC,GAAL,CAAStD,KAAT,CAAe,IAAf,EAAqBkD,QAAQK,GAAR,CAAYrB,QAAQA,KAAKC,MAAzB,CAArB,CAAN;AAEA,QAAMqB,UAAW,MAAM5E,EAAE6E,GAAF,CAAM,EAAN,EAAUb,GAAV,EAAe,GAAf,CAAqB,KAA5C;AACA,QAAMc,YAAa,MAAM9E,EAAE6E,GAAF,CAAM,EAAN,EAAUb,GAAV,EAAe,EAAf,CAAoB,KAA7C;AACA,MAAIJ,QAAQ,EAAZ;AAEAA,QAAM7C,IAAN,CAAW6D,OAAX;;AACA,MAAIL,KAAJ,EAAW;AACVX,SAAM7C,IAAN,CAAY,MAAMf,EAAE+E,KAAF,CAAQR,KAAR,EAAeP,GAAf,CAAqB,KAAvC;AACAJ,SAAM7C,IAAN,CAAW6D,OAAX;AACA;;AACDhB,QAAM7C,IAAN,CAAW+D,SAAX;AAEAlB,UAAQ,CAAC,GAAGA,KAAJ,EAAW,GAAGU,QAAQK,GAAR,CAAYrB,QAAS,MAAMtD,EAAEgF,IAAF,CAAO1B,IAAP,EAAaU,GAAb,CAAmB,KAA9C,CAAd,CAAR;AAEAJ,QAAM7C,IAAN,CAAW+D,SAAX;AACAlB,QAAM7C,IAAN,CAAW6D,OAAX;AACA,SAAOhB,KAAP;AACA;;AAEDzC,MAAK6B,OAAL,EAAc;AACb,MAAIxD,cAAcW,OAAd,KAA0B,KAA9B,EAAqC;AACpCX,iBAAcqB,UAAd,CAAyB,IAAzB,EAA+BoE,SAA/B;AACA;AACA;;AACD,MAAIjC,QAAQrB,KAAR,IAAiB,IAArB,EAA2B;AAC1BqB,WAAQrB,KAAR,GAAgB,CAAhB;AACA;;AAED,MAAInC,cAAcgB,QAAd,GAAyBwC,QAAQrB,KAArC,EAA4C;AAC3C;AACA;;AAED,QAAMsB,SAAS,KAAKF,SAAL,CAAeC,OAAf,CAAf;;AAEA,MAAIA,QAAQJ,GAAR,KAAgB,IAAhB,IAAwBjD,EAAEuF,QAAF,CAAWlC,QAAQiC,SAAR,CAAkB,CAAlB,CAAX,CAA5B,EAA8D;AAC7D,OAAIvD,QAAQyD,SAAZ;;AACA,OAAI3D,aAAawB,QAAQT,IAArB,CAAJ,EAAgC;AAC/Bb,YAAQF,aAAawB,QAAQT,IAArB,EAA2Bb,KAAnC;AACA;;AAED,SAAMkB,MAAM,KAAKyB,QAAL,CAAcrB,QAAQiC,SAAR,CAAkB,CAAlB,CAAd,EAAoCjC,QAAQiC,SAAR,CAAkB,CAAlB,CAApC,CAAZ;AACA,OAAIG,YAAY,GAAhB;;AACA,OAAI1D,KAAJ,EAAW;AACV0D,gBAAYA,UAAU1D,KAAV,CAAZ;AACA;;AAED2D,WAAQzD,GAAR,CAAYwD,SAAZ,EAAuBnC,MAAvB;AACAL,OAAI0C,OAAJ,CAAYhC,QAAQ;AACnB+B,YAAQzD,GAAR,CAAYwD,SAAZ,EAAuB1D,QAAQ4B,KAAK5B,KAAL,CAAR,GAAqB4B,IAA5C;AACA,IAFD;AAIA,GAjBD,MAiBO;AACNN,WAAQiC,SAAR,CAAkBM,OAAlB,CAA0BtC,MAA1B;AACAoC,WAAQzD,GAAR,CAAYR,KAAZ,CAAkBiE,OAAlB,EAA2BrC,QAAQiC,SAAnC;AACA;AACD;;AAvNY,C,CAyNd;;;AACA,2BAASO,OAAO9F,MAAP,GAAgBuC,OAAzB;;AACA,MAAMxC,gBAAgB,UAASgG,MAAT,EAAiBC,IAAjB,EAAuB;AAC5C,KAAIC,GAAJ;;AACA,KAAI;AACH,MAAIF,OAAO,CAAP,MAAc,GAAlB,EAAuB;AACtBE,SAAMC,MAAMC,KAAN,CAAYJ,MAAZ,CAAN;AACA,GAFD,MAEO;AACNE,SAAM;AACLrB,aAASmB,MADJ;AAELK,UAAMJ,IAFD;AAGL/D,WAAO;AAHF,IAAN;AAKA;;AACD,SAAOoE,IAAIC,MAAJ,CAAWL,GAAX,EAAgB;AAACjE,UAAO;AAAR,GAAhB,CAAP;AACA,EAXD,CAWE,OAAOM,KAAP,EAAc;AACf,SAAOyD,MAAP;AACA;AACD,CAhBD,C,CAiBA;;;AACA,iCAAe,IAAI/F,MAAJ,CAAW,QAAX,EAAqB;AAAE;AACrCmD,UAAS;AACRoD,WAAS;AACR1D,SAAM,SADE;AAERZ,UAAO;AAFC;AADD;AAD0B,CAArB,CAAf;AAUA,MAAMpC,SAAS,IAAI,cAAcU,YAAd,CAA2B;AAC7CC,eAAc;AACb;AACA,QAAMgG,QAAQC,QAAQC,MAAR,CAAeF,KAA7B;AACA,OAAK7F,KAAL,GAAa,EAAb;;AACA8F,UAAQC,MAAR,CAAeF,KAAf,GAAuB,CAAC,GAAGpF,IAAJ,KAAa;AACnCoF,SAAM9E,KAAN,CAAY+E,QAAQC,MAApB,EAA4BtF,IAA5B;AACA,SAAM4E,OAAO,IAAIW,IAAJ,EAAb;AACA,SAAMZ,SAAShG,cAAcqB,KAAK,CAAL,CAAd,EAAuB4E,IAAvB,CAAf;AACA,SAAMxE,OAAO;AACZoF,QAAIC,OAAOD,EAAP,EADQ;AAEZb,UAFY;AAGZe,QAAId;AAHQ,IAAb;AAKA,QAAKrF,KAAL,CAAWU,IAAX,CAAgBG,IAAhB;;AAEA,OAAI,OAAOuF,UAAP,KAAsB,WAA1B,EAAuC;AACtC,UAAMC,QAAQD,WAAWE,QAAX,CAAoBC,GAApB,CAAwB,gBAAxB,CAAd;;AACA,QAAIF,SAAS,KAAKrG,KAAL,CAAWkD,MAAX,GAAoBmD,KAAjC,EAAwC;AACvC,UAAKrG,KAAL,CAAWwG,KAAX;AACA;AACD;;AACD,QAAKjG,IAAL,CAAU,OAAV,EAAmB6E,MAAnB,EAA2BvE,IAA3B;AACA,GAlBD;AAmBA;;AAxB4C,CAA/B,EAAf;AA4BA4F,OAAOC,OAAP,CAAe,QAAf,EAAyB,YAAW;AACnC,KAAI,CAAC,KAAKC,MAAN,IAAgBP,WAAWQ,KAAX,CAAiBC,aAAjB,CAA+B,KAAKF,MAApC,EAA4C,WAA5C,MAA6D,IAAjF,EAAuF;AACtF,SAAO,KAAKG,KAAL,EAAP;AACA;;AAED5H,QAAOc,KAAP,CAAaiF,OAAb,CAAqBpE,QAAQ;AAC5B,OAAKkG,KAAL,CAAW,QAAX,EAAqBlG,KAAKoF,EAA1B,EAA8B;AAC7Bb,WAAQvE,KAAKuE,MADgB;AAE7Be,OAAItF,KAAKsF;AAFoB,GAA9B;AAIA,EALD;AAOA,MAAKW,KAAL;AACA5H,QAAO8H,EAAP,CAAU,OAAV,EAAmB,CAAC5B,MAAD,EAASvE,IAAT,KAAkB;AACpC,OAAKkG,KAAL,CAAW,QAAX,EAAqBlG,KAAKoF,EAA1B,EAA8B;AAC7Bb,WAAQvE,KAAKuE,MADgB;AAE7Be,OAAItF,KAAKsF;AAFoB,GAA9B;AAIA,EALD;AAMA,CAnBD,E","file":"/packages/rocketchat_logger.js","sourcesContent":["/* globals EventEmitter LoggerManager SystemLogger Log*/\nimport _ from 'underscore';\nimport s from 'underscore.string';\n\n//TODO: change this global to import\nLoggerManager = new class extends EventEmitter { // eslint-disable-line no-undef\n\tconstructor() {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.loggers = {};\n\t\tthis.queue = [];\n\t\tthis.showPackage = false;\n\t\tthis.showFileAndLine = false;\n\t\tthis.logLevel = 0;\n\t}\n\tregister(logger) {\n\t\tif (!logger instanceof Logger) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loggers[logger.name] = logger;\n\t\tthis.emit('register', logger);\n\t}\n\taddToQueue(logger, args) {\n\t\tthis.queue.push({\n\t\t\tlogger, args\n\t\t});\n\t}\n\tdispatchQueue() {\n\t\t_.each(this.queue, (item) => item.logger._log.apply(item.logger, item.args));\n\t\tthis.clearQueue();\n\t}\n\tclearQueue() {\n\t\tthis.queue = [];\n\t}\n\n\tdisable() {\n\t\tthis.enabled = false;\n\t}\n\n\tenable(dispatchQueue = false) {\n\t\tthis.enabled = true;\n\t\treturn (dispatchQueue === true) ? this.dispatchQueue() : this.clearQueue();\n\t}\n};\n\n\n\nconst defaultTypes = {\n\tdebug: {\n\t\tname: 'debug',\n\t\tcolor: 'blue',\n\t\tlevel: 2\n\t},\n\tlog: {\n\t\tname: 'info',\n\t\tcolor: 'blue',\n\t\tlevel: 1\n\t},\n\tinfo: {\n\t\tname: 'info',\n\t\tcolor: 'blue',\n\t\tlevel: 1\n\t},\n\tsuccess: {\n\t\tname: 'info',\n\t\tcolor: 'green',\n\t\tlevel: 1\n\t},\n\twarn: {\n\t\tname: 'warn',\n\t\tcolor: 'magenta',\n\t\tlevel: 1\n\t},\n\terror: {\n\t\tname: 'error',\n\t\tcolor: 'red',\n\t\tlevel: 0\n\t}\n};\n\nclass _Logger {\n\tconstructor(name, config = {}) {\n\t\tconst self = this;\n\t\tthis.name = name;\n\n\t\tthis.config = Object.assign({}, config);\n\t\tif (LoggerManager.loggers && LoggerManager.loggers[this.name] != null) {\n\t\t\tLoggerManager.loggers[this.name].warn('Duplicated instance');\n\t\t\treturn LoggerManager.loggers[this.name];\n\t\t}\n\t\t_.each(defaultTypes, (typeConfig, type) => {\n\t\t\tthis[type] = function(...args) {\n\t\t\t\treturn self._log.call(self, {\n\t\t\t\t\tsection: this.__section,\n\t\t\t\t\ttype,\n\t\t\t\t\tlevel: typeConfig.level,\n\t\t\t\t\tmethod: typeConfig.name,\n\t\t\t\t\t'arguments': args\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tself[`${ type }_box`] = function(...args) {\n\t\t\t\treturn self._log.call(self, {\n\t\t\t\t\tsection: this.__section,\n\t\t\t\t\ttype,\n\t\t\t\t\tbox: true,\n\t\t\t\t\tlevel: typeConfig.level,\n\t\t\t\t\tmethod: typeConfig.name,\n\t\t\t\t\t'arguments': args\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\t\tif (this.config.methods) {\n\t\t\t_.each(this.config.methods, (typeConfig, method) => {\n\t\t\t\tif (this[method] != null) {\n\t\t\t\t\tself.warn(`Method ${ method } already exists`);\n\t\t\t\t}\n\t\t\t\tif (defaultTypes[typeConfig.type] == null) {\n\t\t\t\t\tself.warn(`Method type ${ typeConfig.type } does not exist`);\n\t\t\t\t}\n\t\t\t\tthis[method] = function(...args) {\n\t\t\t\t\treturn self._log.call(self, {\n\t\t\t\t\t\tsection: this.__section,\n\t\t\t\t\t\ttype: typeConfig.type,\n\t\t\t\t\t\tlevel: typeConfig.level != null ? typeConfig.level : defaultTypes[typeConfig.type] && defaultTypes[typeConfig.type].level,\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t'arguments': args\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tthis[`${ method }_box`] = function(...args) {\n\t\t\t\t\treturn self._log.call(self, {\n\t\t\t\t\t\tsection: this.__section,\n\t\t\t\t\t\ttype: typeConfig.type,\n\t\t\t\t\t\tbox: true,\n\t\t\t\t\t\tlevel: typeConfig.level != null ? typeConfig.level : defaultTypes[typeConfig.type] && defaultTypes[typeConfig.type].level,\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t'arguments': args\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (this.config.sections) {\n\t\t\t_.each(this.config.sections, (name, section) => {\n\t\t\t\tthis[section] = {};\n\t\t\t\t_.each(defaultTypes, (typeConfig, type) => {\n\t\t\t\t\tself[section][type] = (...args) => this[type].apply({__section: name}, args);\n\t\t\t\t\tself[section][`${ type }_box`] = (...args) => this[`${ type }_box`].apply({__section: name}, args);\n\t\t\t\t});\n\t\t\t\t_.each(this.config.methods, (typeConfig, method) => {\n\t\t\t\t\tself[section][method] = (...args) => self[method].apply({__section: name}, args);\n\t\t\t\t\tself[section][`${ method }_box`] = (...args) => self[`${ method }_box`].apply({__section: name}, args);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tLoggerManager.register(this);\n\t}\n\tgetPrefix(options) {\n\t\tlet prefix = `${ this.name } âž” ${ options.method }`;\n\t\tif (options.section) {\n\t\t\tprefix = `${ this.name } âž” ${ options.section }.${ options.method }`;\n\t\t}\n\t\tconst details = this._getCallerDetails();\n\t\tconst detailParts = [];\n\t\tif (details['package'] && (LoggerManager.showPackage === true || options.type === 'error')) {\n\t\t\tdetailParts.push(details['package']);\n\t\t}\n\t\tif (LoggerManager.showFileAndLine === true || options.type === 'error') {\n\t\t\tif ((details.file != null) && (details.line != null)) {\n\t\t\t\tdetailParts.push(`${ details.file }:${ details.line }`);\n\t\t\t} else {\n\t\t\t\tif (details.file != null) {\n\t\t\t\t\tdetailParts.push(details.file);\n\t\t\t\t}\n\t\t\t\tif (details.line != null) {\n\t\t\t\t\tdetailParts.push(details.line);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (defaultTypes[options.type]) {\n\t\t\t// format the message to a colored message\n\t\t\tprefix = prefix[defaultTypes[options.type].color];\n\t\t}\n\t\tif (detailParts.length > 0) {\n\t\t\tprefix = `${ detailParts.join(' ') } ${ prefix }`;\n\t\t}\n\t\treturn prefix;\n\t}\n\t_getCallerDetails() {\n\t\tconst getStack = () => {\n\t\t\t// We do NOT use Error.prepareStackTrace here (a V8 extension that gets us a\n\t\t\t// core-parsed stack) since it's impossible to compose it with the use of\n\t\t\t// Error.prepareStackTrace used on the server for source maps.\n\t\t\tconst {stack} = new Error();\n\t\t\treturn stack;\n\t\t};\n\t\tconst stack = getStack();\n\t\tif (!stack) {\n\t\t\treturn {};\n\t\t}\n\t\tconst lines = stack.split('\\n').splice(1);\n\t\t// looking for the first line outside the logging package (or an\n\t\t// eval if we find that first)\n\t\tlet line = lines[0];\n\t\tfor (let index = 0, len = lines.length; index < len, index++; line = lines[index]) {\n\t\t\tif (line.match(/^\\s*at eval \\(eval/)) {\n\t\t\t\treturn {file: 'eval'};\n\t\t\t}\n\n\t\t\tif (!line.match(/packages\\/rocketchat_logger(?:\\/|\\.js)/)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst details = {};\n\t\t// The format for FF is 'functionName@filePath:lineNumber'\n\t\t// The format for V8 is 'functionName (packages/logging/logging.js:81)' or\n\t\t//                      'packages/logging/logging.js:81'\n\t\tconst match = /(?:[@(]| at )([^(]+?):([0-9:]+)(?:\\)|$)/.exec(line);\n\t\tif (!match) {\n\t\t\treturn details;\n\t\t}\n\t\tdetails.line = match[2].split(':')[0];\n\t\t// Possible format: https://foo.bar.com/scripts/file.js?random=foobar\n\t\t// XXX: if you can write the following in better way, please do it\n\t\t// XXX: what about evals?\n\t\tdetails.file = match[1].split('/').slice(-1)[0].split('?')[0];\n\t\tconst packageMatch = match[1].match(/packages\\/([^\\.\\/]+)(?:\\/|\\.)/);\n\t\tif (packageMatch) {\n\t\t\tdetails['package'] = packageMatch[1];\n\t\t}\n\t\treturn details;\n\t}\n\tmakeABox(message, title) {\n\t\tif (!_.isArray(message)) {\n\t\t\tmessage = message.split('\\n');\n\t\t}\n\t\tlet len = 0;\n\n\t\tlen = Math.max.apply(null, message.map(line => line.length));\n\n\t\tconst topLine = `+--${ s.pad('', len, '-') }--+`;\n\t\tconst separator = `|  ${ s.pad('', len, '') }  |`;\n\t\tlet lines = [];\n\n\t\tlines.push(topLine);\n\t\tif (title) {\n\t\t\tlines.push(`|  ${ s.lrpad(title, len) }  |`);\n\t\t\tlines.push(topLine);\n\t\t}\n\t\tlines.push(separator);\n\n\t\tlines = [...lines, ...message.map(line => `|  ${ s.rpad(line, len) }  |`)];\n\n\t\tlines.push(separator);\n\t\tlines.push(topLine);\n\t\treturn lines;\n\t}\n\n\t_log(options) {\n\t\tif (LoggerManager.enabled === false) {\n\t\t\tLoggerManager.addToQueue(this, arguments);\n\t\t\treturn;\n\t\t}\n\t\tif (options.level == null) {\n\t\t\toptions.level = 1;\n\t\t}\n\n\t\tif (LoggerManager.logLevel < options.level) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prefix = this.getPrefix(options);\n\n\t\tif (options.box === true && _.isString(options.arguments[0])) {\n\t\t\tlet color = undefined;\n\t\t\tif (defaultTypes[options.type]) {\n\t\t\t\tcolor = defaultTypes[options.type].color;\n\t\t\t}\n\n\t\t\tconst box = this.makeABox(options.arguments[0], options.arguments[1]);\n\t\t\tlet subPrefix = 'âž”';\n\t\t\tif (color) {\n\t\t\t\tsubPrefix = subPrefix[color];\n\t\t\t}\n\n\t\t\tconsole.log(subPrefix, prefix);\n\t\t\tbox.forEach(line => {\n\t\t\t\tconsole.log(subPrefix, color ? line[color]: line);\n\t\t\t});\n\n\t\t} else {\n\t\t\toptions.arguments.unshift(prefix);\n\t\t\tconsole.log.apply(console, options.arguments);\n\t\t}\n\t}\n}\n// TODO: change this global to import\nLogger = global.Logger = _Logger;\nconst processString = function(string, date) {\n\tlet obj;\n\ttry {\n\t\tif (string[0] === '{') {\n\t\t\tobj = EJSON.parse(string);\n\t\t} else {\n\t\t\tobj = {\n\t\t\t\tmessage: string,\n\t\t\t\ttime: date,\n\t\t\t\tlevel: 'info'\n\t\t\t};\n\t\t}\n\t\treturn Log.format(obj, {color: true});\n\t} catch (error) {\n\t\treturn string;\n\t}\n};\n// TODO: change this global to import\nSystemLogger = new Logger('System', { // eslint-disable-line no-undef\n\tmethods: {\n\t\tstartup: {\n\t\t\ttype: 'success',\n\t\t\tlevel: 0\n\t\t}\n\t}\n});\n\n\nconst StdOut = new class extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tconst write = process.stdout.write;\n\t\tthis.queue = [];\n\t\tprocess.stdout.write = (...args) => {\n\t\t\twrite.apply(process.stdout, args);\n\t\t\tconst date = new Date;\n\t\t\tconst string = processString(args[0], date);\n\t\t\tconst item = {\n\t\t\t\tid: Random.id(),\n\t\t\t\tstring,\n\t\t\t\tts: date\n\t\t\t};\n\t\t\tthis.queue.push(item);\n\n\t\t\tif (typeof RocketChat !== 'undefined') {\n\t\t\t\tconst limit = RocketChat.settings.get('Log_View_Limit');\n\t\t\t\tif (limit && this.queue.length > limit) {\n\t\t\t\t\tthis.queue.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.emit('write', string, item);\n\t\t};\n\t}\n};\n\n\nMeteor.publish('stdout', function() {\n\tif (!this.userId || RocketChat.authz.hasPermission(this.userId, 'view-logs') !== true) {\n\t\treturn this.ready();\n\t}\n\n\tStdOut.queue.forEach(item => {\n\t\tthis.added('stdout', item.id, {\n\t\t\tstring: item.string,\n\t\t\tts: item.ts\n\t\t});\n\t});\n\n\tthis.ready();\n\tStdOut.on('write', (string, item) => {\n\t\tthis.added('stdout', item.id, {\n\t\t\tstring: item.string,\n\t\t\tts: item.ts\n\t\t});\n\t});\n});\n\n\nexport { SystemLogger, StdOut, LoggerManager, processString, Logger };\n"]}